{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-96cdd5ce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"translator-view-container container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Patienter med behov for tolk\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"table is-fullwidth\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Bussit aallarffissaat\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ilaasussap aqqa\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ilaasussap inaa\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Nakorsiarfissaq\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Napparsimmavik\"), /*#__PURE__*/_createCommentVNode(\" Hospital Name Column \"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Immikkoortoq\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Paasissutissat\")])], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = [\"rowspan\"];\nconst _hoisted_7 = {\n  class: \"table is-fullwidth\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Bussit aallarffissaat\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ilaasussap aqqa\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ilaasussap inaa\")])], -1 /* HOISTED */));\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = [\"rowspan\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedRides, ride => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: ride.id\n    }, [_createCommentVNode(\" First row for each ride's users \"), ride.users && ride.users.length > 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_5, [_createElementVNode(\"td\", {\n      rowspan: ride.users.length\n    }, _toDisplayString(ride.departure_time), 9 /* TEXT, PROPS */, _hoisted_6), _createElementVNode(\"td\", null, _toDisplayString(ride.users[0].name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.users[0].room), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.users[0].appointment_time), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.users[0].hospital_name), 1 /* TEXT */), _createCommentVNode(\" Use hospital_name \"), _createElementVNode(\"td\", null, _toDisplayString(ride.users[0].department), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.users[0].description), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Subsequent rows for remaining users \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(ride.users.slice(1), user => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: user.id\n      }, [_createElementVNode(\"td\", null, _toDisplayString(user.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.room), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.appointment_time), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.hospital_name), 1 /* TEXT */), _createCommentVNode(\" Use hospital_name \"), _createElementVNode(\"td\", null, _toDisplayString(user.department), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.description), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"table\", _hoisted_7, [_hoisted_8, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedRides, ride => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: ride.id\n    }, [_createCommentVNode(\" First row for each ride's users \"), ride.patients && ride.patients.length > 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_9, [_createElementVNode(\"td\", {\n      rowspan: ride.users.length\n    }, _toDisplayString(ride.departure_time), 9 /* TEXT, PROPS */, _hoisted_10), _createElementVNode(\"td\", null, _toDisplayString(ride.patients[0].name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.patients[0].room), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Subsequent rows for remaining users \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(ride.patients.slice(1), patient => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: patient.id\n      }, [_createElementVNode(\"td\", null, _toDisplayString(patient.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.room), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$options","sortedRides","ride","id","users","length","_hoisted_5","rowspan","departure_time","_hoisted_6","_toDisplayString","name","room","appointment_time","hospital_name","department","description","slice","user","_hoisted_7","_hoisted_8","patients","_hoisted_9","_hoisted_10","patient"],"sources":["/home/peter/projects/bus-frontend/src/views/TranslatorView.vue"],"sourcesContent":["<template>\n    <div class=\"translator-view-container container\">\n        <h2>Patienter med behov for tolk</h2>\n\n        <table class=\"table is-fullwidth\">\n            <thead>\n                <tr>\n                    <th>Bussit aallarffissaat</th>\n                    <th>Ilaasussap aqqa</th>\n                    <th>Ilaasussap inaa</th>\n                    <th>Nakorsiarfissaq</th>\n                    <th>Napparsimmavik</th> <!-- Hospital Name Column -->\n                    <th>Immikkoortoq</th>\n                    <th>Paasissutissat</th>\n                </tr>\n            </thead>\n            <tbody>\n                <template v-for=\"ride in sortedRides\" :key=\"ride.id\">\n                    <!-- First row for each ride's users -->\n                    <tr v-if=\"ride.users && ride.users.length > 0\">\n                        <td :rowspan=\"ride.users.length\">{{ ride.departure_time }}</td>\n                        <td>{{ ride.users[0].name }}</td>\n                        <td>{{ ride.users[0].room }}</td>\n                        <td>{{ ride.users[0].appointment_time }}</td>\n                        <td>{{ ride.users[0].hospital_name }}</td> <!-- Use hospital_name -->\n                        <td>{{ ride.users[0].department }}</td>\n                        <td>{{ ride.users[0].description }}</td>\n                    </tr>\n                    <!-- Subsequent rows for remaining users -->\n                    <tr v-for=\"user in ride.users.slice(1)\" :key=\"user.id\">\n                        <td>{{ user.name }}</td>\n                        <td>{{ user.room }}</td>\n                        <td>{{ user.appointment_time }}</td>\n                        <td>{{ user.hospital_name }}</td> <!-- Use hospital_name -->\n                        <td>{{ user.department }}</td>\n                        <td>{{ user.description }}</td>\n                    </tr>\n                </template>\n            </tbody>\n            <table class=\"table is-fullwidth\">\n                <thead>\n                    <tr>\n                        <th>Bussit aallarffissaat</th>\n                        <th>Ilaasussap aqqa</th>\n                        <th>Ilaasussap inaa</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <template v-for=\"ride in sortedRides\" :key=\"ride.id\">\n                        <!-- First row for each ride's users -->\n                        <tr v-if=\"ride.patients && ride.patients.length > 0\">\n                            <td :rowspan=\"ride.users.length\">{{ ride.departure_time }}</td>\n                            <td>{{ ride.patients[0].name }}</td>\n                            <td>{{ ride.patients[0].room }}</td>\n                        </tr>\n                        <!-- Subsequent rows for remaining users -->\n                        <tr v-for=\"patient in ride.patients.slice(1)\" :key=\"patient.id\">\n                            <td>{{ patient.name }}</td>\n                            <td>{{ patient.room }}</td>\n                        </tr>\n                    </template>\n                </tbody>\n            </table>\n        </table>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            rides: []\n        };\n    },\n    computed: {\n        sortedRides() {\n            return [...this.rides].sort((a, b) => {\n                const timeA = new Date(`1970-01-01T${a.departure_time}`);\n                const timeB = new Date(`1970-01-01T${b.departure_time}`);\n                return timeA - timeB;\n            });\n        }\n    },\n    mounted() {\n        this.fetchRides();\n    },\n    methods: {\n        async fetchRides() {\n            try {\n                const response = await axios.get('http://localhost:8000/api/rides/today');\n                this.rides = response.data;\n            } catch (error) {\n                console.error('Error fetching rides:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.translator-view-container {\n    padding: 20px;\n}\n\n.table {\n    margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}