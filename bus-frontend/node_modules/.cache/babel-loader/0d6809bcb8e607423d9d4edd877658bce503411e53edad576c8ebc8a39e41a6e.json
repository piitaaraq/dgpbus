{"ast":null,"code":"// stores/auth.js\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    token: localStorage.getItem('token') || null // Token from localStorage\n  }),\n  getters: {\n    isAuthenticated: state => !!state.token // Check if token exists\n  },\n  actions: {\n    async login(email, password) {\n      try {\n        const response = await axios.post('/api/token/', {\n          email,\n          password\n        });\n        this.token = response.data.access; // Set token in state\n        localStorage.setItem('token', this.token); // Store token in localStorage\n      } catch (error) {\n        console.error('Login failed:', error);\n      }\n    },\n    logout() {\n      this.token = null; // Clear token in state\n      localStorage.removeItem('token'); // Clear token in localStorage\n    },\n    restoreToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        this.token = token; // Restore token to Pinia state\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useAuthStore","state","token","localStorage","getItem","getters","isAuthenticated","actions","login","email","password","response","post","data","access","setItem","error","console","logout","removeItem","restoreToken"],"sources":["/home/peter/projects/bus-frontend/src/stores/auth.js"],"sourcesContent":["// stores/auth.js\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\n\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    token: localStorage.getItem('token') || null,  // Token from localStorage\n  }),\n\n  getters: {\n    isAuthenticated: (state) => !!state.token,  // Check if token exists\n  },\n\n  actions: {\n    async login(email, password) {\n      try {\n        const response = await axios.post('/api/token/', { email, password });\n        this.token = response.data.access;  // Set token in state\n        localStorage.setItem('token', this.token);  // Store token in localStorage\n      } catch (error) {\n        console.error('Login failed:', error);\n      }\n    },\n\n    logout() {\n      this.token = null;  // Clear token in state\n      localStorage.removeItem('token');  // Clear token in localStorage\n    },\n\n    restoreToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        this.token = token;  // Restore token to Pinia state\n      }\n    },\n  },\n});\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC,MAAM,EAAE;EAC9CG,KAAK,EAAEA,CAAA,MAAO;IACZC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAG;EACjD,CAAC,CAAC;EAEFC,OAAO,EAAE;IACPC,eAAe,EAAGL,KAAK,IAAK,CAAC,CAACA,KAAK,CAACC,KAAK,CAAG;EAC9C,CAAC;EAEDK,OAAO,EAAE;IACP,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,aAAa,EAAE;UAAEH,KAAK;UAAEC;QAAS,CAAC,CAAC;QACrE,IAAI,CAACR,KAAK,GAAGS,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC,CAAE;QACpCX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAE,IAAI,CAACb,KAAK,CAAC,CAAC,CAAE;MAC9C,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACvC;IACF,CAAC;IAEDE,MAAMA,CAAA,EAAG;MACP,IAAI,CAAChB,KAAK,GAAG,IAAI,CAAC,CAAE;MACpBC,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC,CAAC,CAAE;IACrC,CAAC;IAEDC,YAAYA,CAAA,EAAG;MACb,MAAMlB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC,CAAE;MACvB;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}