{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2ef4cc40\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"rides-today-container container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title is-4\"\n}, \"Ullumi bussinut ilaasussat\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"table is-fullwidth is-striped is-hoverable\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Bus\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ilaasussap aqqa\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ilaasussap inaa\")])], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"bus-time-row\"\n};\nconst _hoisted_6 = [\"rowspan\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [_createCommentVNode(\" Loop through grouped rides by bus time \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.groupedRides, (users, busTime) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: busTime\n    }, [_createElementVNode(\"tr\", _hoisted_5, [_createElementVNode(\"td\", {\n      rowspan: users.length + 1\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(busTime), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_6)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(users, user => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: user.id\n      }, [_createElementVNode(\"td\", null, _toDisplayString(user.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.room), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","_Fragment","_renderList","$data","groupedRides","users","busTime","key","_hoisted_5","rowspan","length","_toDisplayString","_hoisted_6","user","id","name","room"],"sources":["/home/peter/projects/bus-frontend/src/views/RidesToday.vue"],"sourcesContent":["<template>\n    <div class=\"rides-today-container container\">\n        <h2 class=\"title is-4\">Ullumi bussinut ilaasussat</h2>\n\n        <table class=\"table is-fullwidth is-striped is-hoverable\">\n            <thead>\n                <tr>\n                    <th>Bus</th>\n                    <th>Ilaasussap aqqa</th>\n                    <th>Ilaasussap inaa</th>\n                </tr>\n            </thead>\n            <tbody>\n                <!-- Loop through grouped rides by bus time -->\n                <template v-for=\"(users, busTime) in groupedRides\" :key=\"busTime\">\n                    <tr class=\"bus-time-row\">\n                        <td :rowspan=\"users.length + 1\"><strong>{{ busTime }}</strong></td>\n                    </tr>\n                    <tr v-for=\"user in users\" :key=\"user.id\">\n                        <td>{{ user.name }}</td>\n                        <td>{{ user.room }}</td>\n                    </tr>\n                </template>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            rides: [], // All rides data\n            groupedRides: {}, // Rides grouped by bus time\n        };\n    },\n    mounted() {\n        this.fetchRides();\n    },\n    methods: {\n        async fetchRides() {\n            try {\n                const response = await axios.get('http://localhost:8000/api/rides/today');\n                this.rides = response.data;\n                this.groupRidesByBusTime();\n            } catch (error) {\n                console.error('Error fetching rides:', error);\n            }\n        },\n        groupRidesByBusTime() {\n            this.groupedRides = this.rides.reduce((acc, ride) => {\n                if (!acc[ride.bus_time]) {\n                    acc[ride.bus_time] = [];\n                }\n                acc[ride.bus_time].push({\n                    name: ride.name,\n                    room: ride.room,\n                    id: ride.id,\n                });\n                return acc;\n            }, {});\n        },\n    },\n};\n</script>\n\n<style scoped>\n.rides-today-container {\n    padding: 20px;\n}\n\n.bus-time-row {\n    background-color: #f0f0f0;\n}\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAiC;gEACxCC,mBAAA,CAAsD;EAAlDD,KAAK,EAAC;AAAY,GAAC,4BAA0B;;EAE1CA,KAAK,EAAC;AAA4C;gEACrDC,mBAAA,CAMQ,gB,aALJA,mBAAA,CAIK,a,aAHDA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAwB,YAApB,iBAAe,G,aACnBA,mBAAA,CAAwB,YAApB,iBAAe,E;;EAMfD,KAAK,EAAC;AAAc;mBAf5C;;uBACIE,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBFC,UAAsD,EAEtDH,mBAAA,CAoBQ,SApBRI,UAoBQ,GAnBJC,UAMQ,EACRL,mBAAA,CAWQ,gBAVJM,mBAAA,4CAA+C,G,kBAC/CL,mBAAA,CAQWM,SAAA,QAtB3BC,WAAA,CAcqDC,KAAA,CAAAC,YAAY,EAdjE,CAckCC,KAAK,EAAEC,OAAO;yBAdhDX,mBAAA,CAAAM,SAAA;MAAAM,GAAA,EAcyED;IAAO,IAC5DZ,mBAAA,CAEK,MAFLc,UAEK,GADDd,mBAAA,CAAmE;MAA9De,OAAO,EAAEJ,KAAK,CAACK,MAAM;QAAMhB,mBAAA,CAA8B,gBAAAiB,gBAAA,CAAnBL,OAAO,iB,iBAhB1EM,UAAA,E,sBAkBoBjB,mBAAA,CAGKM,SAAA,QArBzBC,WAAA,CAkBuCG,KAAK,EAAbQ,IAAI;2BAAflB,mBAAA,CAGK;QAHsBY,GAAG,EAAEM,IAAI,CAACC;UACjCpB,mBAAA,CAAwB,YAAAiB,gBAAA,CAAjBE,IAAI,CAACE,IAAI,kBAChBrB,mBAAA,CAAwB,YAAAiB,gBAAA,CAAjBE,IAAI,CAACG,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}