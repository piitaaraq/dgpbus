{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useAuthStore } from '@/stores/auth'; // Import the Pinia auth store\n\nexport default {\n  name: 'HeaderBar',\n  computed: {\n    // Access the isAuthenticated state from the Pinia store directly\n    isAuthenticated() {\n      const authStore = useAuthStore();\n      return authStore.isAuthenticated; // Return the isAuthenticated state directly\n    }\n  },\n  methods: {\n    handleLogout() {\n      const authStore = useAuthStore();\n      authStore.logout(); // Call the logout action in the store\n      this.$router.push({\n        name: 'LoginPage'\n      }); // Redirect to the login page after logout\n    },\n    changeLanguage(event) {\n      this.$i18n.locale = event.target.value; // Handle language change\n    }\n  },\n  mounted() {\n    const authStore = useAuthStore();\n    authStore.restoreToken(); // Restore the token from localStorage on app reload\n  }\n};","map":{"version":3,"names":["useAuthStore","name","computed","isAuthenticated","authStore","methods","handleLogout","logout","$router","push","changeLanguage","event","$i18n","locale","target","value","mounted","restoreToken"],"sources":["/home/peter/projects/bus-frontend/src/components/HeaderBar.vue"],"sourcesContent":["<template>\n  <header class=\"header is-flex is-align-items-center\">\n    <div class=\"header-title is-flex is-align-items-center\">\n      <router-link to=\"/\" class=\"header-bar-link\">\n        <h1 class=\"title\">\n          {{ $t('headerbar.title') }}\n          <span class=\"colored-word\">{{ $t('headerbar.colored') }}</span>\n        </h1>\n      </router-link>\n    </div>\n\n    <div class=\"header-right is-flex is-align-items-center\">\n      <div class=\"header-logo\">\n        <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\">\n      </div>\n\n      <div class=\"actions-container\">\n        <div class=\"language-selector is-flex is-align-items-center\">\n          <font-awesome-icon :icon=\"['fas', 'globe']\" class=\"icon\" />\n          <select @change=\"changeLanguage($event)\" class=\"language-select\">\n            <option value=\"gl\">Kalaallisut</option>\n            <option value=\"da\">Dansk</option>\n          </select>\n        </div>\n\n        <!-- Show logout button only if the user is authenticated -->\n        <div v-if=\"isAuthenticated\" class=\"logout-container\">\n          <button class=\"logout-button\" @click=\"handleLogout\">\n            <font-awesome-icon :icon=\"['fas', 'sign-out-alt']\" class=\"logout-icon\" />\n            {{ $t('headerbar.logout') }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </header>\n</template>\n\n<script>\nimport { useAuthStore } from '@/stores/auth';  // Import the Pinia auth store\n\nexport default {\n  name: 'HeaderBar',\n\n  computed: {\n    // Access the isAuthenticated state from the Pinia store directly\n    isAuthenticated() {\n      const authStore = useAuthStore();\n      return authStore.isAuthenticated;  // Return the isAuthenticated state directly\n    },\n  },\n\n  methods: {\n    handleLogout() {\n      const authStore = useAuthStore();\n      authStore.logout();  // Call the logout action in the store\n      this.$router.push({ name: 'LoginPage' });  // Redirect to the login page after logout\n    },\n\n    changeLanguage(event) {\n      this.$i18n.locale = event.target.value;  // Handle language change\n    },\n  },\n\n  mounted() {\n    const authStore = useAuthStore();\n    authStore.restoreToken();  // Restore the token from localStorage on app reload\n  },\n};\n</script>\n\n<style scoped>\n/* Header container and spacing */\n.header {\n  padding: 1.5rem 1rem;\n  background: linear-gradient(145deg, #00A5CF, #9FFFCB);\n  height: auto;\n  /* Let the height adjust to the content */\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* Ensure the content is spaced */\n  flex-wrap: wrap;\n  /* Allow wrapping for smaller screens */\n}\n\n/* Adjust the title and logo to wrap nicely */\n.header-title {\n  flex: 1;\n  /* Allow the title to take available space */\n  min-width: 200px;\n  /* Ensure there's some minimum space for the title */\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-left: auto;\n  flex-wrap: wrap;\n  /* Allow wrapping on small screens */\n}\n\n/* Adjust the font size and spacing for the title */\n.title {\n  font-size: 2.5rem;\n  font-weight: bold;\n  margin: 0;\n  white-space: nowrap;\n  /* Prevent text from breaking mid-word */\n}\n\n.colored-word {\n  color: #3A7CA5;\n}\n\n/* Logo styling */\n.header-logo .logo {\n  max-height: 60px;\n  /* Adjust the logo height */\n  max-width: 60px;\n  margin-right: 1rem;\n}\n\n/* Actions container for language selector and logout button */\n.actions-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 0.5rem;\n}\n\n.language-selector {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.language-select {\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.icon {\n  font-size: 1.5rem;\n}\n\n/* Logout button styling */\n.logout-container {\n  margin-top: 0.5rem;\n}\n\n.logout-button {\n  display: flex;\n  align-items: center;\n  background-color: #f4f4f4;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.logout-button:hover {\n  background-color: #e0e0e0;\n}\n\n.logout-icon {\n  margin-right: 0.5rem;\n}\n\n/* Media Queries for Responsive Design */\n@media (max-width: 768px) {\n  .title {\n    font-size: 1.5rem;\n    /* Reduce font size on smaller screens */\n  }\n\n  .header-logo .logo {\n    max-height: 40px;\n    /* Reduce logo size on smaller screens */\n    max-width: 40px;\n  }\n\n  .header {\n    flex-direction: column;\n    /* Stack items vertically on small screens */\n    align-items: flex-start;\n  }\n\n  .header-right {\n    justify-content: flex-start;\n    margin-left: 0;\n  }\n\n  .actions-container {\n    align-items: flex-start;\n  }\n}\n\n@media (max-width: 480px) {\n  .title {\n    font-size: 1.2rem;\n    /* Further reduce font size for extra small screens */\n  }\n\n  .header-logo .logo {\n    max-height: 30px;\n    /* Further reduce logo size */\n    max-width: 30px;\n  }\n}\n</style>\n"],"mappings":";AAsCA,SAASA,YAAW,QAAS,eAAe,EAAG;;AAE/C,eAAe;EACbC,IAAI,EAAE,WAAW;EAEjBC,QAAQ,EAAE;IACR;IACAC,eAAeA,CAAA,EAAG;MAChB,MAAMC,SAAQ,GAAIJ,YAAY,CAAC,CAAC;MAChC,OAAOI,SAAS,CAACD,eAAe,EAAG;IACrC;EACF,CAAC;EAEDE,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,MAAMF,SAAQ,GAAIJ,YAAY,CAAC,CAAC;MAChCI,SAAS,CAACG,MAAM,CAAC,CAAC,EAAG;MACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAER,IAAI,EAAE;MAAY,CAAC,CAAC,EAAG;IAC7C,CAAC;IAEDS,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACC,KAAK,CAACC,MAAK,GAAIF,KAAK,CAACG,MAAM,CAACC,KAAK,EAAG;IAC3C;EACF,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,MAAMZ,SAAQ,GAAIJ,YAAY,CAAC,CAAC;IAChCI,SAAS,CAACa,YAAY,CAAC,CAAC,EAAG;EAC7B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}