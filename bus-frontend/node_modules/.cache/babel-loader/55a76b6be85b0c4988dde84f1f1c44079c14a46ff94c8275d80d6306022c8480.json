{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      rides: []\n    };\n  },\n  computed: {\n    sortedRides() {\n      return [...this.rides].sort((a, b) => {\n        const timeA = new Date(`1970-01-01T${a.departure_time}`);\n        const timeB = new Date(`1970-01-01T${b.departure_time}`);\n        return timeA - timeB;\n      });\n    }\n  },\n  mounted() {\n    this.fetchRides();\n  },\n  methods: {\n    async fetchRides() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/rides/today');\n        this.rides = response.data;\n      } catch (error) {\n        console.error('Error fetching rides:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","rides","computed","sortedRides","sort","a","b","timeA","Date","departure_time","timeB","mounted","fetchRides","methods","response","get","error","console"],"sources":["/home/peter/projects/bus-frontend/src/views/TranslatorView.vue"],"sourcesContent":["<template>\n    <div class=\"translator-view-container container\">\n        <h2>Patienter med behov for tolk</h2>\n\n        <table class=\"table is-fullwidth\">\n            <thead>\n                <tr>\n                    <th>{{ $t(\"confirm.bustime\") }} </th>\n                    <th>{{ $t(\"confirm.name\") }} </th>\n                    <th>Ilaasussap inaa</th>\n                    <th>Nakorsiarfissaq</th>\n                    <th>Napparsimmavik</th> <!-- Hospital Name Column -->\n                    <th>Immikkoortoq</th>\n                    <th>Paasissutissat</th>\n                </tr>\n            </thead>\n            <tbody>\n                <template v-for=\"ride in sortedRides\" :key=\"ride.id\">\n                    <!-- First row for each ride's users -->\n                    <tr v-if=\"ride.patients && ride.patients.length > 0\">\n                        <td :rowspan=\"ride.users.length\">{{ ride.departure_time }}</td>\n                        <td>{{ ride.patients[0].name }}</td>\n                        <td>{{ ride.patients[0].room }}</td>\n                        <td>{{ ride.patients[0].appointment_time }}</td>\n                        <td>{{ ride.patients[0].hospital_name }}</td>\n                        <td>{{ ride.patients[0].department }}</td>\n                        <td>{{ ride.patients[0].description }}</td>\n                    </tr>\n                    <!-- Subsequent rows for remaining users -->\n                    <tr v-for=\"patient in ride.patients.slice(1)\" :key=\"patient.id\">\n                        <td>{{ patient.name }}</td>\n                        <td>{{ patient.room }}</td>\n                    </tr>\n                </template>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            rides: []\n        };\n    },\n    computed: {\n        sortedRides() {\n            return [...this.rides].sort((a, b) => {\n                const timeA = new Date(`1970-01-01T${a.departure_time}`);\n                const timeB = new Date(`1970-01-01T${b.departure_time}`);\n                return timeA - timeB;\n            });\n        }\n    },\n    mounted() {\n        this.fetchRides();\n    },\n    methods: {\n        async fetchRides() {\n            try {\n                const response = await axios.get('http://localhost:8000/api/rides/today');\n                this.rides = response.data;\n            } catch (error) {\n                console.error('Error fetching rides:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.translator-view-container {\n    padding: 20px;\n}\n\n.table {\n    margin-top: 20px;\n}\n</style>\n"],"mappings":"AAwCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE;IACX,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACNC,WAAWA,CAAA,EAAG;MACV,OAAO,CAAC,GAAG,IAAI,CAACF,KAAK,CAAC,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAClC,MAAMC,KAAI,GAAI,IAAIC,IAAI,CAAC,cAAcH,CAAC,CAACI,cAAc,EAAE,CAAC;QACxD,MAAMC,KAAI,GAAI,IAAIF,IAAI,CAAC,cAAcF,CAAC,CAACG,cAAc,EAAE,CAAC;QACxD,OAAOF,KAAI,GAAIG,KAAK;MACxB,CAAC,CAAC;IACN;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,UAAU,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,MAAME,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,uCAAuC,CAAC;QACzE,IAAI,CAACd,KAAI,GAAIa,QAAQ,CAACd,IAAI;MAC9B,EAAE,OAAOgB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}