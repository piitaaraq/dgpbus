{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-96cdd5ce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"translator-view-container container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Patienter med behov for tolk\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"table is-fullwidth\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.bustime\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.name\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.room\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.appTime\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.appDate\")), 1 /* TEXT */), _createCommentVNode(\" New appointment_date column \"), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.hospital\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.department\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.desc\")), 1 /* TEXT */)])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedPatients, patient => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: patient.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(patient.bus_time), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.room), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.appointment_time), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.appointment_date), 1 /* TEXT */), _createCommentVNode(\" Display appointment_date \"), _createElementVNode(\"td\", null, _toDisplayString(patient.hospital_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.department), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","$t","_createCommentVNode","_Fragment","_renderList","$options","sortedPatients","patient","key","id","bus_time","name","room","appointment_time","appointment_date","hospital_name","department","description"],"sources":["/home/peter/projects/bus-frontend/src/views/TranslatorView.vue"],"sourcesContent":["<template>\n    <div class=\"translator-view-container container\">\n        <h2>Patienter med behov for tolk</h2>\n\n        <table class=\"table is-fullwidth\">\n            <thead>\n                <tr>\n                    <th>{{ $t(\"confirm.bustime\") }}</th>\n                    <th>{{ $t(\"confirm.name\") }}</th>\n                    <th>{{ $t(\"confirm.room\") }}</th>\n                    <th>{{ $t(\"confirm.appTime\") }}</th>\n                    <th>{{ $t(\"confirm.appDate\") }}</th> <!-- New appointment_date column -->\n                    <th>{{ $t(\"confirm.hospital\") }}</th>\n                    <th>{{ $t(\"confirm.department\") }}</th>\n                    <th>{{ $t(\"confirm.desc\") }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <template v-for=\"patient in sortedPatients\" :key=\"patient.id\">\n                    <tr>\n                        <td>{{ patient.bus_time }}</td>\n                        <td>{{ patient.name }}</td>\n                        <td>{{ patient.room }}</td>\n                        <td>{{ patient.appointment_time }}</td>\n                        <td>{{ patient.appointment_date }}</td> <!-- Display appointment_date -->\n                        <td>{{ patient.hospital_name }}</td>\n                        <td>{{ patient.department }}</td>\n                        <td>{{ patient.description }}</td>\n                    </tr>\n                </template>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            patients: []\n        };\n    },\n    computed: {\n        sortedPatients() {\n            return [...this.patients].sort((a, b) => {\n                const timeA = new Date(`1970-01-01T${a.appointment_time}`);\n                const timeB = new Date(`1970-01-01T${b.appointment_time}`);\n                return timeA - timeB;\n            });\n        }\n    },\n    mounted() {\n        this.fetchPatients();\n    },\n    methods: {\n        async fetchPatients() {\n            try {\n                const response = await axios.get('http://localhost:8000/api/patients/translator-view/');\n                this.patients = response.data;\n            } catch (error) {\n                console.error('Error fetching patients:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.translator-view-container {\n    padding: 20px;\n}\n\n.table {\n    margin-top: 20px;\n}\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAqC;gEAC5CC,mBAAA,CAAqC,YAAjC,8BAA4B;;EAEzBD,KAAK,EAAC;AAAoB;;uBAHrCE,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BFC,UAAqC,EAErCH,mBAAA,CA2BQ,SA3BRI,UA2BQ,GA1BJJ,mBAAA,CAWQ,gBAVJA,mBAAA,CASK,aARDA,mBAAA,CAAoC,YAAAK,gBAAA,CAA7BC,IAAA,CAAAC,EAAE,qCACTP,mBAAA,CAAiC,YAAAK,gBAAA,CAA1BC,IAAA,CAAAC,EAAE,kCACTP,mBAAA,CAAiC,YAAAK,gBAAA,CAA1BC,IAAA,CAAAC,EAAE,kCACTP,mBAAA,CAAoC,YAAAK,gBAAA,CAA7BC,IAAA,CAAAC,EAAE,qCACTP,mBAAA,CAAoC,YAAAK,gBAAA,CAA7BC,IAAA,CAAAC,EAAE,qCAA4BC,mBAAA,iCAAoC,EACzER,mBAAA,CAAqC,YAAAK,gBAAA,CAA9BC,IAAA,CAAAC,EAAE,sCACTP,mBAAA,CAAuC,YAAAK,gBAAA,CAAhCC,IAAA,CAAAC,EAAE,wCACTP,mBAAA,CAAiC,YAAAK,gBAAA,CAA1BC,IAAA,CAAAC,EAAE,iC,KAGjBP,mBAAA,CAaQ,iB,kBAZJC,mBAAA,CAWWQ,SAAA,QA7B3BC,WAAA,CAkB4CC,QAAA,CAAAC,cAAc,EAAzBC,OAAO;yBACpBZ,mBAAA,CASK;MA5BzBa,GAAA,EAkBkED,OAAO,CAACE;QAElDf,mBAAA,CAA+B,YAAAK,gBAAA,CAAxBQ,OAAO,CAACG,QAAQ,kBACvBhB,mBAAA,CAA2B,YAAAK,gBAAA,CAApBQ,OAAO,CAACI,IAAI,kBACnBjB,mBAAA,CAA2B,YAAAK,gBAAA,CAApBQ,OAAO,CAACK,IAAI,kBACnBlB,mBAAA,CAAuC,YAAAK,gBAAA,CAAhCQ,OAAO,CAACM,gBAAgB,kBAC/BnB,mBAAA,CAAuC,YAAAK,gBAAA,CAAhCQ,OAAO,CAACO,gBAAgB,kBAASZ,mBAAA,8BAAiC,EACzER,mBAAA,CAAoC,YAAAK,gBAAA,CAA7BQ,OAAO,CAACQ,aAAa,kBAC5BrB,mBAAA,CAAiC,YAAAK,gBAAA,CAA1BQ,OAAO,CAACS,UAAU,kBACzBtB,mBAAA,CAAkC,YAAAK,gBAAA,CAA3BQ,OAAO,CAACU,WAAW,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}