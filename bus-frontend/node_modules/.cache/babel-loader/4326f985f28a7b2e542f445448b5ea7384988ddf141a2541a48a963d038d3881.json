{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-40423556\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"bus-schedules-container container\"\n};\nconst _hoisted_2 = {\n  class: \"title is-2\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"title is-3\"\n};\nconst _hoisted_5 = {\n  class: \"table is-fullwidth is-striped mb-5\"\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  class: \"title is-3\"\n};\nconst _hoisted_8 = {\n  class: \"table is-fullwidth is-striped\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString(_ctx.$t(\"schedules.heading\")), 1 /* TEXT */), _createCommentVNode(\" Table for Departure Location 1 (Patienthjemmet) \"), $data.departureLocation1Schedules.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h3\", _hoisted_4, _toDisplayString(_ctx.$t(\"schedules.toRiget\")), 1 /* TEXT */), _createElementVNode(\"table\", _hoisted_5, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedDaysOfWeek, day => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: day\n    }, _toDisplayString(_ctx.$t(`days.${day}`)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedGroupedSchedules($data.departureLocation1Schedules), times => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: times.id\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedDaysOfWeek, day => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: day\n      }, _toDisplayString($options.formatTime(times[day]) || '-'), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Table for Departure Location 2 (Rigshospitalet) \"), $data.departureLocation2Schedules.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"h3\", _hoisted_7, _toDisplayString(_ctx.$t(\"schedules.toDgp\")), 1 /* TEXT */), _createElementVNode(\"table\", _hoisted_8, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedDaysOfWeek, day => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: day\n    }, _toDisplayString(_ctx.$t(`days.${day}`)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedGroupedSchedules($data.departureLocation2Schedules), times => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: times.id\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedDaysOfWeek, day => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: day\n      }, _toDisplayString($options.formatTime(times[day]) || '-'), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","_ctx","$t","_createCommentVNode","$data","departureLocation1Schedules","length","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","$options","sortedDaysOfWeek","day","sortedGroupedSchedules","times","id","formatTime","departureLocation2Schedules","_hoisted_6","_hoisted_7","_hoisted_8"],"sources":["/home/peter/projects/bus-frontend/src/views/BusSchedules.vue"],"sourcesContent":["<template>\n    <div class=\"bus-schedules-container container\">\n        <h2 class=\"title is-2\">{{ $t(\"schedules.heading\") }}</h2>\n\n        <!-- Table for Departure Location 1 (Patienthjemmet) -->\n        <div v-if=\"departureLocation1Schedules.length\">\n            <h3 class=\"title is-3\">{{ $t(\"schedules.toRiget\") }}</h3>\n            <table class=\"table is-fullwidth is-striped mb-5\">\n                <thead>\n                    <tr>\n                        <th v-for=\"day in sortedDaysOfWeek\" :key=\"day\">{{ $t(`days.${day}`) }}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"times in sortedGroupedSchedules(departureLocation1Schedules)\" :key=\"times.id\">\n                        <td v-for=\"day in sortedDaysOfWeek\" :key=\"day\">{{ formatTime(times[day]) || '-' }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <!-- Table for Departure Location 2 (Rigshospitalet) -->\n        <div v-if=\"departureLocation2Schedules.length\">\n            <h3 class=\"title is-3\">{{ $t(\"schedules.toDgp\") }}</h3>\n            <table class=\"table is-fullwidth is-striped\">\n                <thead>\n                    <tr>\n                        <th v-for=\"day in sortedDaysOfWeek\" :key=\"day\">{{ $t(`days.${day}`) }}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"times in sortedGroupedSchedules(departureLocation2Schedules)\" :key=\"times.id\">\n                        <td v-for=\"day in sortedDaysOfWeek\" :key=\"day\">{{ formatTime(times[day]) || '-' }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            schedules: [],\n            departureLocation1Schedules: [],\n            departureLocation2Schedules: [],\n            daysOfWeek: ['Mandag', 'Tirsdag', 'Onsdag', 'Torsdag', 'Fredag'], // Days of the week in order\n        };\n    },\n    computed: {\n        sortedDaysOfWeek() {\n            return this.daysOfWeek;\n        }\n    },\n    mounted() {\n        this.fetchSchedules();\n    },\n    methods: {\n        async fetchSchedules() {\n            try {\n                const response = await axios.get('http://localhost:8000/api/schedules/');\n                this.schedules = response.data;\n\n                // Group schedules by departure location\n                this.departureLocation1Schedules = this.schedules.filter(\n                    schedule => schedule.departure_location === 'Patienthjemmet'\n                );\n                this.departureLocation2Schedules = this.schedules.filter(\n                    schedule => schedule.departure_location === 'Rigshospitalet'\n                );\n            } catch (error) {\n                console.error('Error fetching bus schedules:', error);\n            }\n        },\n        groupedSchedules(schedules) {\n            // Group schedules by departure_time with keys for each day_of_week\n            const scheduleMap = {};\n\n            schedules.forEach(schedule => {\n                const time = schedule.departure_time;\n                if (!scheduleMap[time]) {\n                    scheduleMap[time] = {};\n                }\n                scheduleMap[time][schedule.day_of_week] = time;\n            });\n\n            return Object.values(scheduleMap);\n        },\n        sortedGroupedSchedules(schedules) {\n            // Sort schedules first by day of the week and then by time\n            const grouped = this.groupedSchedules(schedules);\n\n            return grouped.sort((a, b) => {\n                const timeA = Object.values(a).find(val => val) || '00:00:00'; // Fallback time if empty\n                const timeB = Object.values(b).find(val => val) || '00:00:00';\n\n                // Sort by time\n                return new Date(`1970-01-01T${timeA}`) - new Date(`1970-01-01T${timeB}`);\n            });\n        },\n        formatTime(time) {\n            if (!time) return null;\n\n            // Convert time string to Date and format as HH:MM\n            const date = new Date(`1970-01-01T${time}`);\n            return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n        },\n    },\n};\n</script>\n\n<style scoped>\n.bus-schedules-container {\n    padding: 20px;\n}\n\n.table {\n    margin-top: 20px;\n}\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAmC;;EACtCA,KAAK,EAAC;AAAY;;EAF9BC,GAAA;AAAA;;EAMgBD,KAAK,EAAC;AAAY;;EACfA,KAAK,EAAC;AAAoC;;EAP7DC,GAAA;AAAA;;EAuBgBD,KAAK,EAAC;AAAY;;EACfA,KAAK,EAAC;AAA+B;;uBAvBpDE,mBAAA,CAoCM,OApCNC,UAoCM,GAnCFC,mBAAA,CAAyD,MAAzDC,UAAyD,EAAAC,gBAAA,CAA/BC,IAAA,CAAAC,EAAE,uCAE5BC,mBAAA,qDAAwD,EAC7CC,KAAA,CAAAC,2BAA2B,CAACC,MAAM,I,cAA7CV,mBAAA,CAcM,OAnBdW,UAAA,GAMYT,mBAAA,CAAyD,MAAzDU,UAAyD,EAAAR,gBAAA,CAA/BC,IAAA,CAAAC,EAAE,uCAC5BJ,mBAAA,CAWQ,SAXRW,UAWQ,GAVJX,mBAAA,CAIQ,gBAHJA,mBAAA,CAEK,c,kBADDF,mBAAA,CAA2Ec,SAAA,QAVnGC,WAAA,CAU0CC,QAAA,CAAAC,gBAAgB,EAAvBC,GAAG;yBAAdlB,mBAAA,CAA2E;MAAtCD,GAAG,EAAEmB;IAAG,GAAAd,gBAAA,CAAKC,IAAA,CAAAC,EAAE,SAASY,GAAG;sCAGxEhB,mBAAA,CAIQ,iB,kBAHJF,mBAAA,CAEKc,SAAA,QAhBzBC,WAAA,CAcwCC,QAAA,CAAAG,sBAAsB,CAACX,KAAA,CAAAC,2BAA2B,GAA3DW,KAAK;yBAAhBpB,mBAAA,CAEK;MAFqED,GAAG,EAAEqB,KAAK,CAACC;2BACjFrB,mBAAA,CAAuFc,SAAA,QAf/GC,WAAA,CAe0CC,QAAA,CAAAC,gBAAgB,EAAvBC,GAAG;2BAAdlB,mBAAA,CAAuF;QAAlDD,GAAG,EAAEmB;MAAG,GAAAd,gBAAA,CAAKY,QAAA,CAAAM,UAAU,CAACF,KAAK,CAACF,GAAG;;0CAf9FX,mBAAA,gBAqBQA,mBAAA,qDAAwD,EAC7CC,KAAA,CAAAe,2BAA2B,CAACb,MAAM,I,cAA7CV,mBAAA,CAcM,OApCdwB,UAAA,GAuBYtB,mBAAA,CAAuD,MAAvDuB,UAAuD,EAAArB,gBAAA,CAA7BC,IAAA,CAAAC,EAAE,qCAC5BJ,mBAAA,CAWQ,SAXRwB,UAWQ,GAVJxB,mBAAA,CAIQ,gBAHJA,mBAAA,CAEK,c,kBADDF,mBAAA,CAA2Ec,SAAA,QA3BnGC,WAAA,CA2B0CC,QAAA,CAAAC,gBAAgB,EAAvBC,GAAG;yBAAdlB,mBAAA,CAA2E;MAAtCD,GAAG,EAAEmB;IAAG,GAAAd,gBAAA,CAAKC,IAAA,CAAAC,EAAE,SAASY,GAAG;sCAGxEhB,mBAAA,CAIQ,iB,kBAHJF,mBAAA,CAEKc,SAAA,QAjCzBC,WAAA,CA+BwCC,QAAA,CAAAG,sBAAsB,CAACX,KAAA,CAAAe,2BAA2B,GAA3DH,KAAK;yBAAhBpB,mBAAA,CAEK;MAFqED,GAAG,EAAEqB,KAAK,CAACC;2BACjFrB,mBAAA,CAAuFc,SAAA,QAhC/GC,WAAA,CAgC0CC,QAAA,CAAAC,gBAAgB,EAAvBC,GAAG;2BAAdlB,mBAAA,CAAuF;QAAlDD,GAAG,EAAEmB;MAAG,GAAAd,gBAAA,CAAKY,QAAA,CAAAM,UAAU,CAACF,KAAK,CAACF,GAAG;;0CAhC9FX,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}