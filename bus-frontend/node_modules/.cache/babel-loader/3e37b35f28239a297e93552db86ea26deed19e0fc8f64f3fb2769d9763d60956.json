{"ast":null,"code":"import axios from 'axios';\nimport { useAuthStore } from '@/stores/auth';\nexport default {\n  data() {\n    return {\n      pendingUsers: [],\n      errorMessage: ''\n    };\n  },\n  async created() {\n    try {\n      const authStore = useAuthStore();\n      const response = await axios.get('http://localhost:8000/api/approve-users/', {\n        headers: {\n          Authorization: `Bearer ${authStore.token}`\n        }\n      });\n      this.pendingUsers = response.data;\n    } catch (error) {\n      this.errorMessage = 'Failed to load pending users.';\n    }\n  },\n  methods: {\n    async approveUser(userId) {\n      try {\n        const authStore = useAuthStore();\n        await axios.post('http://localhost:8000/api/approve-users/${userId}/', null, {\n          headers: {\n            Authorization: `Bearer ${authStore.token}`\n          }\n        });\n        this.pendingUsers = this.pendingUsers.filter(user => user.id !== userId); // Remove approved user from the list\n      } catch (error) {\n        this.errorMessage = 'Failed to approve user.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","useAuthStore","data","pendingUsers","errorMessage","created","authStore","response","get","headers","Authorization","token","error","methods","approveUser","userId","post","filter","user","id"],"sources":["/home/peter/projects/bus-frontend/src/views/PendingApprovals.vue"],"sourcesContent":["<template>\n    <div class=\"pending-approvals\">\n        <h1 class=\" title is-1\">Venter p√• godkendelse</h1>\n        <ul>\n            <li v-for=\"user in pendingUsers\" :key=\"user.id\">\n                {{ user.email }}\n                <button @click=\"approveUser(user.id)\">Godkend</button>\n            </li>\n        </ul>\n        <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { useAuthStore } from '@/stores/auth';\n\nexport default {\n    data() {\n        return {\n            pendingUsers: [],\n            errorMessage: '',\n        };\n    },\n    async created() {\n        try {\n            const authStore = useAuthStore();\n            const response = await axios.get('http://localhost:8000/api/approve-users/', {\n                headers: {\n                    Authorization: `Bearer ${authStore.token}`,\n                },\n            });\n            this.pendingUsers = response.data;\n        } catch (error) {\n            this.errorMessage = 'Failed to load pending users.';\n        }\n    },\n    methods: {\n        async approveUser(userId) {\n            try {\n                const authStore = useAuthStore();\n                await axios.post('http://localhost:8000/api/approve-users/${userId}/', null, {\n                    headers: {\n                        Authorization: `Bearer ${authStore.token}`,\n                    },\n                });\n                this.pendingUsers = this.pendingUsers.filter(user => user.id !== userId);  // Remove approved user from the list\n            } catch (error) {\n                this.errorMessage = 'Failed to approve user.';\n            }\n        },\n    },\n};\n</script>\n"],"mappings":"AAcA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,YAAW,QAAS,eAAe;AAE5C,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ,IAAI;MACA,MAAMC,SAAQ,GAAIL,YAAY,CAAC,CAAC;MAChC,MAAMM,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,0CAA0C,EAAE;QACzEC,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUJ,SAAS,CAACK,KAAK;QAC5C;MACJ,CAAC,CAAC;MACF,IAAI,CAACR,YAAW,GAAII,QAAQ,CAACL,IAAI;IACrC,EAAE,OAAOU,KAAK,EAAE;MACZ,IAAI,CAACR,YAAW,GAAI,+BAA+B;IACvD;EACJ,CAAC;EACDS,OAAO,EAAE;IACL,MAAMC,WAAWA,CAACC,MAAM,EAAE;MACtB,IAAI;QACA,MAAMT,SAAQ,GAAIL,YAAY,CAAC,CAAC;QAChC,MAAMD,KAAK,CAACgB,IAAI,CAAC,oDAAoD,EAAE,IAAI,EAAE;UACzEP,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUJ,SAAS,CAACK,KAAK;UAC5C;QACJ,CAAC,CAAC;QACF,IAAI,CAACR,YAAW,GAAI,IAAI,CAACA,YAAY,CAACc,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,EAAC,KAAMJ,MAAM,CAAC,EAAG;MAC/E,EAAE,OAAOH,KAAK,EAAE;QACZ,IAAI,CAACR,YAAW,GAAI,yBAAyB;MACjD;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}