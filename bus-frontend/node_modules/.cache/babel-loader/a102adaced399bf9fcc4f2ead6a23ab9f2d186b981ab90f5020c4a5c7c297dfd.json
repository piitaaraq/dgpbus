{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useAuthStore } from '@/stores/auth'; // Import the Pinia auth store\n\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async loginUser() {\n      try {\n        const authStore = useAuthStore();\n        // Trigger the login action\n        await authStore.login(this.email, this.password); // Call login() from Pinia store\n\n        // Check if the login was successful by confirming the token is set\n        if (authStore.isAuthenticated) {\n          console.log(\"Login successful. Redirecting to AdminDashboard.\");\n          this.$router.push({\n            name: 'AdminDashboard'\n          }); // Redirect on successful login\n        } else {\n          this.errorMessage = 'Login failed. Please check your credentials.';\n        }\n      } catch (error) {\n        this.errorMessage = 'Login failed. Please check your credentials.';\n        console.error('Login Error:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["useAuthStore","data","email","password","errorMessage","methods","loginUser","authStore","login","isAuthenticated","console","log","$router","push","name","error"],"sources":["/home/peter/projects/bus-frontend/src/views/LoginPage.vue"],"sourcesContent":["<template>\n    <div class=\"login-container\">\n        <h1>Login</h1>\n        <form @submit.prevent=\"loginUser\">\n            <div class=\"field\">\n                <label class=\"label\">email</label>\n                <div class=\"control\">\n                    <input type=\"text\" v-model=\"email\" class=\"input\" required />\n                </div>\n            </div>\n            <div class=\"field\">\n                <label class=\"label\">Password</label>\n                <div class=\"control\">\n                    <input type=\"password\" v-model=\"password\" class=\"input\" required />\n                </div>\n            </div>\n            <div class=\"field\">\n                <div class=\"control\">\n                    <button class=\"button is-primary\" type=\"submit\">Login</button>\n                </div>\n            </div>\n            <div>\n                <p>\n                    <router-link to=\"/registrer\">Registrer</router-link> dig som bruger hvis du ikke er oprettet endnu.\n                </p>\n            </div>\n            <p v-if=\"errorMessage\" class=\"has-text-danger\">{{ errorMessage }}</p>\n        </form>\n    </div>\n</template>\n<script>\nimport { useAuthStore } from '@/stores/auth';  // Import the Pinia auth store\n\nexport default {\n    data() {\n        return {\n            email: '',\n            password: '',\n            errorMessage: '',\n        };\n    },\n    methods: {\n        async loginUser() {\n            try {\n                const authStore = useAuthStore();\n                // Trigger the login action\n                await authStore.login(this.email, this.password);  // Call login() from Pinia store\n\n                // Check if the login was successful by confirming the token is set\n                if (authStore.isAuthenticated) {\n                    console.log(\"Login successful. Redirecting to AdminDashboard.\");\n                    this.$router.push({ name: 'AdminDashboard' });  // Redirect on successful login\n                } else {\n                    this.errorMessage = 'Login failed. Please check your credentials.';\n                }\n            } catch (error) {\n                this.errorMessage = 'Login failed. Please check your credentials.';\n                console.error('Login Error:', error);\n            }\n        },\n    },\n};\n</script>\n\n\n<style scoped>\n.login-container {\n    max-width: 400px;\n    margin: 0 auto;\n    padding: 20px;\n}\n</style>\n"],"mappings":";AA+BA,SAASA,YAAW,QAAS,eAAe,EAAG;;AAE/C,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,SAASA,CAAA,EAAG;MACd,IAAI;QACA,MAAMC,SAAQ,GAAIP,YAAY,CAAC,CAAC;QAChC;QACA,MAAMO,SAAS,CAACC,KAAK,CAAC,IAAI,CAACN,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,EAAG;;QAEnD;QACA,IAAII,SAAS,CAACE,eAAe,EAAE;UAC3BC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;UAC/D,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAiB,CAAC,CAAC,EAAG;QACpD,OAAO;UACH,IAAI,CAACV,YAAW,GAAI,8CAA8C;QACtE;MACJ,EAAE,OAAOW,KAAK,EAAE;QACZ,IAAI,CAACX,YAAW,GAAI,8CAA8C;QAClEM,OAAO,CAACK,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACxC;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}