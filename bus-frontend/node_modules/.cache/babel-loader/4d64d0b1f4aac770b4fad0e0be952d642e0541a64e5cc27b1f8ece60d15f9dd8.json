{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: ['userId', 'formData', 'busTime'],\n  // Receive userId and formData as props\n  mounted() {\n    console.log('Received formData:', this.formData); // Log formData for debugging\n    console.log('Received userId:', this.userId); // Log userId for debugging\n  },\n  methods: {\n    async acceptEntry() {\n      // Navigate to the homepage after accepting the entry\n      this.$router.push({\n        name: 'HomePage'\n      }); // Replace 'HomePage' with the appropriate route name\n    },\n    goBack() {\n      this.$router.go(-1); // Go back to the form page\n    },\n    async editEntry() {\n      try {\n        // Delete the user's entry from the backend\n        await axios.delete(`http://localhost:8000/api/users/${this.userId}/`);\n\n        // Navigate back to the hospital selection list\n        this.$router.push({\n          name: 'HospitalList'\n        });\n      } catch (error) {\n        console.error('Error deleting entry:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","mounted","console","log","formData","userId","methods","acceptEntry","$router","push","name","goBack","go","editEntry","delete","error"],"sources":["/home/peter/projects/bus-frontend/src/views/ConfirmForm.vue"],"sourcesContent":["<template>\n  <div class=\"confirmation-form-container container\">\n    <div class=\"explanatory-text\">\n      <p>Paasissutissat immersorsimasatit qimerloorluakkit, tamarmillu kukkuneqarsimanngippata\n        akueralugit nassiutikkit.\n      </p>\n      <p>\n        Malugiuk Peqqissartut Illuanniit aallarnissarnut piffissaq naatsortarparput,\n        Napparsimavimmiinnissaq minuttinik 30-nik sioqqullugu illumiit aallareersimanissaq anguniarlugu.\n      </p>\n    </div>\n\n    <!-- Greyed-out box showing user input -->\n    <div class=\"form-section\">\n      <div class=\"greyed-out-box\">\n        <p><strong>Atit:</strong> {{ formData.name }}</p>\n        <p><strong>Inivit normua:</strong> {{ formData.room }}</p>\n        <p><strong>Ulloq nakorsiarfissaq:</strong> {{ formData.appointment_date }}</p>\n        <p><strong>Piffissaq:</strong> {{ formData.appointment_time }}</p>\n        <p><strong>Napparsimmavimmi immikkoortoq:</strong> {{ formData.department }}</p>\n        <p><strong>Oqalutseqassaaq:</strong> {{ formData.needs_translator ? 'Yes' : 'No' }}</p>\n        <p><strong>Bussit ilaaffissatit:</strong> {{ busTime }}</p> <!-- Show bus_time here -->\n      </div>\n\n      <!-- Confirm and Go Back buttons -->\n      <div class=\"field is-grouped mt-4\">\n        <div class=\"control\">\n          <button class=\"button is-primary\" @click=\"acceptEntry\">Akuerikkit</button> <!-- Button to accept entry -->\n        </div>\n        <div class=\"control\">\n          <button class=\"button is-light\" @click=\"goBack\">Uterit</button>\n        </div>\n        <div class=\"control\">\n          <button class=\"button is-danger\" @click=\"editEntry\">Edit Entry</button>\n          <!-- Edit button to delete and start over -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: ['userId', 'formData', 'busTime'],  // Receive userId and formData as props\n  mounted() {\n    console.log('Received formData:', this.formData);  // Log formData for debugging\n    console.log('Received userId:', this.userId);      // Log userId for debugging\n  },\n  methods: {\n    async acceptEntry() {\n      // Navigate to the homepage after accepting the entry\n      this.$router.push({ name: 'HomePage' });  // Replace 'HomePage' with the appropriate route name\n    },\n    goBack() {\n      this.$router.go(-1);  // Go back to the form page\n    },\n    async editEntry() {\n      try {\n        // Delete the user's entry from the backend\n        await axios.delete(`http://localhost:8000/api/users/${this.userId}/`);\n\n        // Navigate back to the hospital selection list\n        this.$router.push({ name: 'HospitalList' });\n      } catch (error) {\n        console.error('Error deleting entry:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.confirmation-form-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 20px;\n}\n\n.greyed-out-box {\n  background-color: #f0f0f0;\n  padding: 20px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":";AA0CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC;EAAG;EAC3CC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACC,QAAQ,CAAC,EAAG;IACnDF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACE,MAAM,CAAC,EAAO;EACrD,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAW,CAAC,CAAC,EAAG;IAC5C,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACH,OAAO,CAACI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAG;IACxB,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF;QACA,MAAMd,KAAK,CAACe,MAAM,CAAC,mCAAmC,IAAI,CAACT,MAAM,GAAG,CAAC;;QAErE;QACA,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAe,CAAC,CAAC;MAC7C,EAAE,OAAOK,KAAK,EAAE;QACdb,OAAO,CAACa,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}