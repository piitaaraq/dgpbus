{"ast":null,"code":"// stores/auth.js\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    token: localStorage.getItem('token') || null // Initialize token from localStorage\n  }),\n  getters: {\n    isAuthenticated: state => !!state.token // Check if the token exists\n  },\n  actions: {\n    async login(email, password) {\n      try {\n        console.log('Attempting login with email:', email); // Logging the start of login\n        const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/api/token/`, {\n          email,\n          password\n        });\n        if (response && response.data && response.data.access) {\n          console.log('Login successful, storing token:', response.data.access); // Logging successful token response\n          this.$patch({\n            token: response.data.access\n          });\n          localStorage.setItem('token', response.data.access); // Store the token in localStorage\n        } else {\n          console.log('Invalid login response');\n          throw new Error('Invalid login response');\n        }\n      } catch (error) {\n        console.error('Login failed:', error.response ? error.response.data : error.message);\n        throw new Error('Login failed. Please check your credentials.');\n      }\n    },\n    logout() {\n      try {\n        this.$patch({\n          token: null // Ensure reactivity when clearing token\n        });\n        localStorage.removeItem('token'); // Clear the token from localStorage\n      } catch (error) {\n        console.error('Error logging out:', error.message);\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useAuthStore","state","token","localStorage","getItem","getters","isAuthenticated","actions","login","email","password","console","log","response","post","process","env","VUE_APP_BACKEND_URL","data","access","$patch","setItem","Error","error","message","logout","removeItem"],"sources":["/home/peter/projects/bus-frontend/src/stores/auth.js"],"sourcesContent":["// stores/auth.js\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\n\nexport const useAuthStore = defineStore('auth', {\n    state: () => ({\n        token: localStorage.getItem('token') || null,  // Initialize token from localStorage\n    }),\n    getters: {\n        isAuthenticated: (state) => !!state.token,  // Check if the token exists\n    },\n    actions: {\n        async login(email, password) {\n            try {\n                console.log('Attempting login with email:', email);  // Logging the start of login\n                const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/api/token/`, {\n                    email,\n                    password,\n                });\n\n                if (response && response.data && response.data.access) {\n                    console.log('Login successful, storing token:', response.data.access);  // Logging successful token response\n                    this.$patch({\n                        token: response.data.access,\n                    });\n                    localStorage.setItem('token', response.data.access);  // Store the token in localStorage\n                } else {\n                    console.log('Invalid login response');\n                    throw new Error('Invalid login response');\n                }\n            } catch (error) {\n                console.error('Login failed:', error.response ? error.response.data : error.message);\n                throw new Error('Login failed. Please check your credentials.');\n            }\n        },\n        logout() {\n            try {\n                this.$patch({\n                    token: null,  // Ensure reactivity when clearing token\n                });\n                localStorage.removeItem('token');  // Clear the token from localStorage\n            } catch (error) {\n                console.error('Error logging out:', error.message);\n            }\n        },\n    },\n});\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC,MAAM,EAAE;EAC5CG,KAAK,EAAEA,CAAA,MAAO;IACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAG;EACnD,CAAC,CAAC;EACFC,OAAO,EAAE;IACLC,eAAe,EAAGL,KAAK,IAAK,CAAC,CAACA,KAAK,CAACC,KAAK,CAAG;EAChD,CAAC;EACDK,OAAO,EAAE;IACL,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;MACzB,IAAI;QACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,KAAK,CAAC,CAAC,CAAE;QACrD,MAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,aAAa,EAAE;UAC/ER,KAAK;UACLC;QACJ,CAAC,CAAC;QAEF,IAAIG,QAAQ,IAAIA,QAAQ,CAACK,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAACC,MAAM,EAAE;UACnDR,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEC,QAAQ,CAACK,IAAI,CAACC,MAAM,CAAC,CAAC,CAAE;UACxE,IAAI,CAACC,MAAM,CAAC;YACRlB,KAAK,EAAEW,QAAQ,CAACK,IAAI,CAACC;UACzB,CAAC,CAAC;UACFhB,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAER,QAAQ,CAACK,IAAI,CAACC,MAAM,CAAC,CAAC,CAAE;QAC1D,CAAC,MAAM;UACHR,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;UACrC,MAAM,IAAIU,KAAK,CAAC,wBAAwB,CAAC;QAC7C;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZZ,OAAO,CAACY,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACV,QAAQ,GAAGU,KAAK,CAACV,QAAQ,CAACK,IAAI,GAAGK,KAAK,CAACC,OAAO,CAAC;QACpF,MAAM,IAAIF,KAAK,CAAC,8CAA8C,CAAC;MACnE;IACJ,CAAC;IACDG,MAAMA,CAAA,EAAG;MACL,IAAI;QACA,IAAI,CAACL,MAAM,CAAC;UACRlB,KAAK,EAAE,IAAI,CAAG;QAClB,CAAC,CAAC;QACFC,YAAY,CAACuB,UAAU,CAAC,OAAO,CAAC,CAAC,CAAE;MACvC,CAAC,CAAC,OAAOH,KAAK,EAAE;QACZZ,OAAO,CAACY,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACtD;IACJ;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}