{"ast":null,"code":"import { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    token: localStorage.getItem('token') || null // Initialize token from localStorage\n  }),\n  getters: {\n    isAuthenticated: state => !!state.token // Check if the token exists\n  },\n  actions: {\n    async login(email, password) {\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/api/token/`, {\n          email,\n          password\n        });\n        if (response && response.data && response.data.access) {\n          this.token = response.data.access;\n          localStorage.setItem('token', this.token); // Store the token in localStorage\n        } else {\n          throw new Error('Invalid login response');\n        }\n      } catch (error) {\n        console.error('Login failed:', error.response ? error.response.data : error.message);\n        throw new Error('Login failed. Please check your credentials.');\n      }\n    },\n    logout() {\n      this.token = null;\n      localStorage.removeItem('token'); // Clear the token from localStorage\n    },\n    // This function restores the token from localStorage into the Pinia state when the app starts\n    restoreToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        this.token = token; // Sync the store state with the token from localStorage\n        console.log('Token restored from localStorage:', token);\n      } else {\n        console.log('No token found in localStorage.');\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useAuthStore","state","token","localStorage","getItem","getters","isAuthenticated","actions","login","email","password","response","post","process","env","VUE_APP_BACKEND_URL","data","access","setItem","Error","error","console","message","logout","removeItem","restoreToken","log"],"sources":["/home/peter/projects/bus-frontend/src/stores/auth.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport axios from 'axios';\n\nexport const useAuthStore = defineStore('auth', {\n    state: () => ({\n        token: localStorage.getItem('token') || null,  // Initialize token from localStorage\n    }),\n    getters: {\n        isAuthenticated: (state) => !!state.token,  // Check if the token exists\n    },\n    actions: {\n        async login(email, password) {\n            try {\n                const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/api/token/`, {\n                    email,\n                    password,\n                });\n\n                if (response && response.data && response.data.access) {\n                    this.token = response.data.access;\n                    localStorage.setItem('token', this.token);  // Store the token in localStorage\n                } else {\n                    throw new Error('Invalid login response');\n                }\n            } catch (error) {\n                console.error('Login failed:', error.response ? error.response.data : error.message);\n                throw new Error('Login failed. Please check your credentials.');\n            }\n        },\n        logout() {\n            this.token = null;\n            localStorage.removeItem('token');  // Clear the token from localStorage\n        },\n        // This function restores the token from localStorage into the Pinia state when the app starts\n        restoreToken() {\n            const token = localStorage.getItem('token');\n            if (token) {\n                this.token = token;  // Sync the store state with the token from localStorage\n                console.log('Token restored from localStorage:', token);\n            } else {\n                console.log('No token found in localStorage.');\n            }\n        },\n    },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC,MAAM,EAAE;EAC5CG,KAAK,EAAEA,CAAA,MAAO;IACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAG;EACnD,CAAC,CAAC;EACFC,OAAO,EAAE;IACLC,eAAe,EAAGL,KAAK,IAAK,CAAC,CAACA,KAAK,CAACC,KAAK,CAAG;EAChD,CAAC;EACDK,OAAO,EAAE;IACL,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;MACzB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,aAAa,EAAE;UAC/EN,KAAK;UACLC;QACJ,CAAC,CAAC;QAEF,IAAIC,QAAQ,IAAIA,QAAQ,CAACK,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAACC,MAAM,EAAE;UACnD,IAAI,CAACf,KAAK,GAAGS,QAAQ,CAACK,IAAI,CAACC,MAAM;UACjCd,YAAY,CAACe,OAAO,CAAC,OAAO,EAAE,IAAI,CAAChB,KAAK,CAAC,CAAC,CAAE;QAChD,CAAC,MAAM;UACH,MAAM,IAAIiB,KAAK,CAAC,wBAAwB,CAAC;QAC7C;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACT,QAAQ,GAAGS,KAAK,CAACT,QAAQ,CAACK,IAAI,GAAGI,KAAK,CAACE,OAAO,CAAC;QACpF,MAAM,IAAIH,KAAK,CAAC,8CAA8C,CAAC;MACnE;IACJ,CAAC;IACDI,MAAMA,CAAA,EAAG;MACL,IAAI,CAACrB,KAAK,GAAG,IAAI;MACjBC,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC,CAAC,CAAE;IACvC,CAAC;IACD;IACAC,YAAYA,CAAA,EAAG;MACX,MAAMvB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACP,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC,CAAE;QACrBmB,OAAO,CAACK,GAAG,CAAC,mCAAmC,EAAExB,KAAK,CAAC;MAC3D,CAAC,MAAM;QACHmB,OAAO,CAACK,GAAG,CAAC,iCAAiC,CAAC;MAClD;IACJ;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}