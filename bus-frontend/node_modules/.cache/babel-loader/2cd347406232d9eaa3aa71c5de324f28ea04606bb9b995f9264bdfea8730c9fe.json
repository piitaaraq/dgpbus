{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { useFormStore } from '@/stores/formStore';\nexport default {\n  setup() {\n    const formStore = useFormStore(); // Access Pinia store\n    const formData = formStore.formData; // Get form data from Pinia store\n    const busTime = formStore.formData.busTime;\n    return {\n      formData\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Send the form data (along with bus time) to the backend for user creation\n        const response = await axios.post('http://localhost:8000/api/users/', this.formData);\n\n        // Check if the form submission was successful\n        if (response.status === 201) {\n          console.log('User created:', response.data);\n\n          // Redirect to the homepage or show a success message\n          this.$router.push({\n            name: 'HomePage'\n          });\n        }\n      } catch (error) {\n        console.error('Error submitting form:', error);\n      }\n    },\n    goBack() {\n      this.$router.go(-1); // Navigate back to the form page\n    }\n  }\n};","map":{"version":3,"names":["axios","useFormStore","setup","formStore","formData","busTime","methods","submitForm","response","post","status","console","log","data","$router","push","name","error","goBack","go"],"sources":["/home/peter/projects/bus-frontend/src/views/ConfirmForm.vue"],"sourcesContent":["<template>\n  <div class=\"confirmation-form-container container\">\n    <div class=\"explanatory-text\">\n      <p>Paasissutissat immersorsimasatit qimerloorluakkit, tamarmillu kukkuneqarsimanngippata\n        akueralugit nassiutikkit.\n      </p>\n      <p>\n        Malugiuk Peqqissartut Illuanniit aallarnissarnut piffissaq naatsortarparput,\n        Napparsimavimmiinnissaq minuttinik 30-nik sioqqullugu illumiit aallareersimanissaq anguniarlugu.\n      </p>\n    </div>\n\n    <!-- Greyed-out box showing user input -->\n    <div class=\"form-section\">\n      <div class=\"greyed-out-box\">\n        <p><strong>Atit:</strong> {{ formData.name }}</p>\n        <p><strong>Inivit normua:</strong> {{ formData.room }}</p>\n        <p><strong>Ulloq nakorsiarfissaq:</strong> {{ formData.appointment_date }}</p>\n        <p><strong>Piffissaq:</strong> {{ formData.appointment_time }}</p>\n        <p><strong>Napparsimmavimmi immikkoortoq:</strong> {{ formData.department }}</p>\n        <p><strong>Oqalutseqassaaq:</strong> {{ formData.needs_translator ? 'Yes' : 'No' }}</p>\n        <p><strong>Bussit ilaaffissatit:</strong> {{ busTime }}</p> <!-- Show bus_time here -->\n      </div>\n\n      <!-- Confirm and Go Back buttons -->\n      <div class=\"field is-grouped mt-4\">\n        <div class=\"control\">\n          <button class=\"button is-primary\" @click=\"submitForm\">Akuerikkit</button> <!-- Button to accept entry -->\n        </div>\n        <div class=\"control\">\n          <button class=\"button is-light\" @click=\"goBack\">Uterit</button>\n        </div>\n        <div class=\"control\">\n          <button class=\"button is-danger\" @click=\"editEntry\">Edit Entry</button>\n          <!-- Edit button to delete and start over -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { useFormStore } from '@/stores/formStore';\n\nexport default {\n  setup() {\n    const formStore = useFormStore(); // Access Pinia store\n    const formData = formStore.formData; // Get form data from Pinia store\n    const busTime = formStore.formData.busTime;\n\n    return { formData };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Send the form data (along with bus time) to the backend for user creation\n        const response = await axios.post('http://localhost:8000/api/users/', this.formData);\n\n        // Check if the form submission was successful\n        if (response.status === 201) {\n          console.log('User created:', response.data);\n\n          // Redirect to the homepage or show a success message\n          this.$router.push({ name: 'HomePage' });\n        }\n      } catch (error) {\n        console.error('Error submitting form:', error);\n      }\n    },\n    goBack() {\n      this.$router.go(-1); // Navigate back to the form page\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n.confirmation-form-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 20px;\n}\n\n.greyed-out-box {\n  background-color: #f0f0f0;\n  padding: 20px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":";AA0CA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,YAAW,QAAS,oBAAoB;AAEjD,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIF,YAAY,CAAC,CAAC,EAAE;IAClC,MAAMG,QAAO,GAAID,SAAS,CAACC,QAAQ,EAAE;IACrC,MAAMC,OAAM,GAAIF,SAAS,CAACC,QAAQ,CAACC,OAAO;IAE1C,OAAO;MAAED;IAAS,CAAC;EACrB,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAACL,QAAQ,CAAC;;QAEpF;QACA,IAAII,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3BC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,QAAQ,CAACK,IAAI,CAAC;;UAE3C;UACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAW,CAAC,CAAC;QACzC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACJ,OAAO,CAACK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}