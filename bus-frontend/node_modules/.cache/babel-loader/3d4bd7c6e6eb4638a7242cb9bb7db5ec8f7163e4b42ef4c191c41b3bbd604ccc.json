{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      patients: []\n    };\n  },\n  computed: {\n    sortedPatients() {\n      return [...this.patients].sort((a, b) => {\n        const timeA = new Date(`1970-01-01T${a.appointment_time}`);\n        const timeB = new Date(`1970-01-01T${b.appointment_time}`);\n        return timeA - timeB;\n      });\n    }\n  },\n  mounted() {\n    this.fetchPatients();\n  },\n  methods: {\n    async fetchPatients() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/patients/translator-view/');\n        this.patients = response.data;\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","patients","computed","sortedPatients","sort","a","b","timeA","Date","appointment_time","timeB","mounted","fetchPatients","methods","response","get","error","console"],"sources":["/home/peter/projects/bus-frontend/src/views/TranslatorView.vue"],"sourcesContent":["<template>\n    <div class=\"translator-view-container container\">\n        <h2>Patienter med behov for tolk</h2>\n\n        <table class=\"table is-fullwidth\">\n            <thead>\n                <tr>\n                    <th>{{ $t(\"confirm.bustime\") }}</th>\n                    <th>{{ $t(\"confirm.name\") }}</th>\n                    <th>{{ $t(\"confirm.room\") }}</th>\n                    <th>{{ $t(\"confirm.appTime\") }}</th>\n                    <th>{{ $t(\"confirm.appDate\") }}</th> <!-- New appointment_date column -->\n                    <th>{{ $t(\"confirm.hospital\") }}</th>\n                    <th>{{ $t(\"confirm.department\") }}</th>\n                    <th>{{ $t(\"confirm.desc\") }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <template v-for=\"patient in sortedPatients\" :key=\"patient.id\">\n                    <tr>\n                        <td>{{ patient.bus_time }}</td>\n                        <td>{{ patient.name }}</td>\n                        <td>{{ patient.room }}</td>\n                        <td>{{ patient.appointment_time }}</td>\n                        <td>{{ patient.appointment_date }}</td> <!-- Display appointment_date -->\n                        <td>{{ patient.hospital_name }}</td>\n                        <td>{{ patient.department }}</td>\n                        <td>{{ patient.description }}</td>\n                    </tr>\n                </template>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            patients: []\n        };\n    },\n    computed: {\n        sortedPatients() {\n            return [...this.patients].sort((a, b) => {\n                const timeA = new Date(`1970-01-01T${a.appointment_time}`);\n                const timeB = new Date(`1970-01-01T${b.appointment_time}`);\n                return timeA - timeB;\n            });\n        }\n    },\n    mounted() {\n        this.fetchPatients();\n    },\n    methods: {\n        async fetchPatients() {\n            try {\n                const response = await axios.get('http://localhost:8000/api/patients/translator-view/');\n                this.patients = response.data;\n            } catch (error) {\n                console.error('Error fetching patients:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.translator-view-container {\n    padding: 20px;\n}\n\n.table {\n    margin-top: 20px;\n}\n</style>\n"],"mappings":"AAoCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACNC,cAAcA,CAAA,EAAG;MACb,OAAO,CAAC,GAAG,IAAI,CAACF,QAAQ,CAAC,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACrC,MAAMC,KAAI,GAAI,IAAIC,IAAI,CAAC,cAAcH,CAAC,CAACI,gBAAgB,EAAE,CAAC;QAC1D,MAAMC,KAAI,GAAI,IAAIF,IAAI,CAAC,cAAcF,CAAC,CAACG,gBAAgB,EAAE,CAAC;QAC1D,OAAOF,KAAI,GAAIG,KAAK;MACxB,CAAC,CAAC;IACN;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,aAAa,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,aAAaA,CAAA,EAAG;MAClB,IAAI;QACA,MAAME,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,qDAAqD,CAAC;QACvF,IAAI,CAACd,QAAO,GAAIa,QAAQ,CAACd,IAAI;MACjC,EAAE,OAAOgB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}