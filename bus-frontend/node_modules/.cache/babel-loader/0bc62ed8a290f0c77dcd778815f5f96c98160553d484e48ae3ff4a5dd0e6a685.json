{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useAuthStore } from '@/stores/auth';\nexport default {\n  name: 'HeaderBar',\n  computed: {\n    // Define `isLoggedIn` within the `computed` property\n    isLoggedIn() {\n      const authStore = useAuthStore(); // Access the Pinia store\n      return authStore.isAuthenticated; // Return the reactive state from the store\n    }\n  },\n  methods: {\n    handleLogout() {\n      const authStore = useAuthStore();\n      authStore.logout(); // Trigger the logout action from the store\n      this.$router.push({\n        name: 'LoginPage'\n      }); // Redirect to login after logging out\n    },\n    changeLanguage(event) {\n      this.$i18n.locale = event.target.value; // Handle language change\n    }\n  },\n  mounted() {\n    const authStore = useAuthStore();\n    authStore.restoreToken(); // Restore the token on component mount\n    console.log('Current isLoggedIn state:', this.isLoggedIn); // Log the reactive state\n  }\n};","map":{"version":3,"names":["useAuthStore","name","computed","isLoggedIn","authStore","isAuthenticated","methods","handleLogout","logout","$router","push","changeLanguage","event","$i18n","locale","target","value","mounted","restoreToken","console","log"],"sources":["/home/peter/projects/bus-frontend/src/components/HeaderBar.vue"],"sourcesContent":["<template>\n  <header class=\"header is-flex is-align-items-center\">\n    <div class=\"header-title is-flex is-align-items-center\">\n      <router-link to=\"/\" class=\"header-bar-link\">\n        <h1 class=\"title\">\n          {{ $t('headerbar.title') }}\n          <span class=\"colored-word\">{{ $t('headerbar.colored') }}</span>\n        </h1>\n      </router-link>\n    </div>\n\n    <div class=\"header-right is-flex is-align-items-center\">\n      <div class=\"header-logo\">\n        <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\">\n      </div>\n\n      <!-- Keep language selector and logo aligned in the same row -->\n      <div class=\"actions-container\">\n        <div class=\"language-selector is-flex is-align-items-center\">\n          <font-awesome-icon :icon=\"['fas', 'globe']\" class=\"icon\" />\n          <select @change=\"changeLanguage($event)\" class=\"language-select\">\n            <option value=\"gl\">Kalaallisut</option>\n            <option value=\"da\">Dansk</option>\n          </select>\n        </div>\n\n        <!-- Logout button below the language selector -->\n        <div v-if=\"isLoggedIn\" class=\"logout-container\">\n          <button class=\"logout-button\" @click=\"handleLogout\">\n            <font-awesome-icon :icon=\"['fas', 'sign-out-alt']\" class=\"logout-icon\" />\n            {{ $t('headerbar.logout') }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </header>\n</template>\n\n<script>\nimport { useAuthStore } from '@/stores/auth';\n\nexport default {\n  name: 'HeaderBar',\n  computed: {\n    // Define `isLoggedIn` within the `computed` property\n    isLoggedIn() {\n      const authStore = useAuthStore();  // Access the Pinia store\n      return authStore.isAuthenticated;  // Return the reactive state from the store\n    },\n  },\n  methods: {\n    handleLogout() {\n      const authStore = useAuthStore();\n      authStore.logout();  // Trigger the logout action from the store\n      this.$router.push({ name: 'LoginPage' });  // Redirect to login after logging out\n    },\n    changeLanguage(event) {\n      this.$i18n.locale = event.target.value;  // Handle language change\n    },\n  },\n  mounted() {\n    const authStore = useAuthStore();\n    authStore.restoreToken();  // Restore the token on component mount\n    console.log('Current isLoggedIn state:', this.isLoggedIn);  // Log the reactive state\n  },\n};\n\n</script>\n\n<style scoped>\n/* Header container and spacing */\n.header {\n  padding: 1.5rem 1rem;\n  background-color: #f5f5f5;\n  height: 120px;\n  display: flex;\n  align-items: center;\n}\n\n/* Pushes everything to the right */\n.header-right {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n}\n\n.header-bar-link {\n  text-decoration: none;\n  color: inherit;\n}\n\n.title {\n  font-size: 2.5rem;\n  font-weight: bold;\n}\n\n.colored-word {\n  color: #3A7CA5;\n}\n\n/* Logo styling */\n.header-logo .logo {\n  max-height: 100px;\n  max-width: 100px;\n  margin-right: 1rem;\n}\n\n/* Actions container for language selector and logout button */\n.actions-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.language-selector {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.language-select {\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.icon {\n  font-size: 1.5rem;\n}\n\n/* Logout button styling */\n.logout-container {\n  margin-top: 0.5rem;\n}\n\n.logout-button {\n  display: flex;\n  align-items: center;\n  background-color: #f4f4f4;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.logout-button:hover {\n  background-color: #e0e0e0;\n}\n\n.logout-icon {\n  margin-right: 0.5rem;\n}\n</style>\n"],"mappings":";AAuCA,SAASA,YAAW,QAAS,eAAe;AAE5C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE;IACR;IACAC,UAAUA,CAAA,EAAG;MACX,MAAMC,SAAQ,GAAIJ,YAAY,CAAC,CAAC,EAAG;MACnC,OAAOI,SAAS,CAACC,eAAe,EAAG;IACrC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,MAAMH,SAAQ,GAAIJ,YAAY,CAAC,CAAC;MAChCI,SAAS,CAACI,MAAM,CAAC,CAAC,EAAG;MACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAET,IAAI,EAAE;MAAY,CAAC,CAAC,EAAG;IAC7C,CAAC;IACDU,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACC,KAAK,CAACC,MAAK,GAAIF,KAAK,CAACG,MAAM,CAACC,KAAK,EAAG;IAC3C;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMb,SAAQ,GAAIJ,YAAY,CAAC,CAAC;IAChCI,SAAS,CAACc,YAAY,CAAC,CAAC,EAAG;IAC3BC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAACjB,UAAU,CAAC,EAAG;EAC9D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}