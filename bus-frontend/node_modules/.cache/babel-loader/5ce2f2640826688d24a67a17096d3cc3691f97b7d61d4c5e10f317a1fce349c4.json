{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: ['id'],\n  // Get hospital ID from the route params\n  data() {\n    return {\n      hospital: {},\n      // Store hospital details\n      form: {\n        name: '',\n        room: '',\n        appointment_date: '',\n        appointment_time: '',\n        department: '',\n        needs_translator: false,\n        hospital: this.id // Automatically associate the hospital ID\n      },\n      busTime: null // Store the calculated bus time\n    };\n  },\n  mounted() {\n    console.log('Received hospital id: ', this.id);\n    this.fetchHospital(); // Fetch hospital details when the component mounts\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Submit the form data to the backend to create the user\n        const response = await axios.post('http://localhost:8000/api/users/', this.form);\n\n        // Log the full response for debugging\n        console.log('Backend response:', response.data);\n        if (response.status === 201) {\n          alert('User successfully created!');\n        }\n      } catch (error) {\n        console.error('Error submitting form:', error);\n        if (error.response) {\n          console.log('Error response:', error.response.data); // Log error response from the server\n        }\n      }\n    }\n  },\n  // Navigate back to the hospital list view\n  goBack() {\n    console.log('Form data:', this.form);\n    console.log('Bus time:', this.busTime);\n    this.$router.push({\n      name: 'HospitalList'\n    });\n  }\n};","map":{"version":3,"names":["axios","props","data","hospital","form","name","room","appointment_date","appointment_time","department","needs_translator","id","busTime","mounted","console","log","fetchHospital","methods","submitForm","response","post","status","alert","error","goBack","$router","push"],"sources":["/home/peter/projects/bus-frontend/src/views/HospitalForm.vue"],"sourcesContent":["<template>\n  <div class=\"hospital-form-container container\">\n    <div class=\"explanatory-text\">\n      <p class=\"is-size-4\">\n        Nakorsiarnissat pillugu paasissutissat immersussavatit. Qanoq\n        ateqarnerlutit, kinguliat ilanngutinngikkaluarlugu allassvat. Qassimi\n        ineqarnerlutit aamma narkorsiarnissavit ullua, piffissaa\n        napparsimmavimmilu immikkoortumi sumiinnersoq ilanngullguti\n        immersussavatit.\n      </p>\n      <p class=\"is-size-4\">Immersugassat tamakkerukkit ingerlaqqissaatit.</p>\n      <p class=\"is-size-4\">\n        Kalaallit Peqqissartut Illuannut utertussaasimaguit \"Uterit\" tuussavat.\n      </p>\n    </div>\n\n    <div class=\"form-section\">\n      <h2>Nakorsiarnissat pillugu</h2>\n      <form @submit.prevent=\"submitForm\">\n        <div class=\"field\">\n          <label class=\"label\">Atit</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"text\" v-model=\"form.name\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Inivit normua</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"text\" v-model=\"form.room\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Nakorsiarfissavit ullua</label>\n          <div class=\"control\">\n            <input\n              class=\"input\"\n              type=\"date\"\n              v-model=\"form.appointment_date\"\n              required\n            />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Piffissaq</label>\n          <div class=\"control\">\n            <input\n              class=\"input\"\n              type=\"time\"\n              v-model=\"form.appointment_time\"\n              required\n            />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Napparsimmavimmi immikkoortoq</label>\n          <div class=\"control\">\n            <input\n              class=\"input\"\n              type=\"text\"\n              v-model=\"form.department\"\n              required\n            />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Oqalutsimik pisariaqartitsivit?</label>\n          <div class=\"control\">\n            <label class=\"radio\">\n              <input\n                type=\"radio\"\n                v-model=\"form.needs_translator\"\n                :value=\"true\"\n              />\n              Aap\n            </label>\n            <label class=\"radio\">\n              <input\n                type=\"radio\"\n                v-model=\"form.needs_translator\"\n                :value=\"false\"\n              />\n              Naamik\n            </label>\n          </div>\n        </div>\n        <div class=\"field is-grouped mt-4\" style=\"display: flex; gap: 10px\">\n          <div class=\"control\">\n            <button class=\"button is-primary\" type=\"submit\">\n              Ingerlaqqigit\n            </button>\n          </div>\n          <div class=\"control\">\n            <button class=\"button is-light\" type=\"button\" @click=\"goBack\">\n              Uterit\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: ['id'],  // Get hospital ID from the route params\n  data() {\n    return {\n      hospital: {},  // Store hospital details\n      form: {\n        name: '',\n        room: '',\n        appointment_date: '',\n        appointment_time: '',\n        department: '',\n        needs_translator: false,\n        hospital: this.id,  // Automatically associate the hospital ID\n      },\n      busTime: null,  // Store the calculated bus time\n    };\n  },\n  mounted() {\n    console.log('Received hospital id: ', this.id);\n    this.fetchHospital();  // Fetch hospital details when the component mounts\n  },\n    methods: {\n    async submitForm() {\n      try {\n        // Submit the form data to the backend to create the user\n        const response = await axios.post('http://localhost:8000/api/users/', this.form);\n\n        // Log the full response for debugging\n        console.log('Backend response:', response.data);\n\n        if (response.status === 201) {\n          alert('User successfully created!');\n        }\n      } catch (error) {\n        console.error('Error submitting form:', error);\n        if (error.response) {\n          console.log('Error response:', error.response.data);  // Log error response from the server\n        }\n      }\n    },\n  },\n  // Navigate back to the hospital list view\n  goBack() {\n    console.log('Form data:', this.form);\n    console.log('Bus time:', this.busTime);\n    this.$router.push({ name: 'HospitalList' });\n  }\n\n};\n</script>\n\n<style scoped>\n/* Flexbox layout for wide screens */\n.hospital-form-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 20px;\n}\n\n.explanatory-text {\n  flex: 1;\n  margin-right: 40px;\n  min-width: 300px;\n}\n\n.form-section {\n  flex: 1;\n  min-width: 300px;\n}\n\n@media (max-width: 768px) {\n  /* Stack content vertically for small screens */\n  .hospital-form-container {\n    flex-direction: column;\n  }\n\n  .explanatory-text,\n  .form-section {\n    margin-right: 0;\n  }\n}\n\n.radio {\n  margin-right: 30px;\n}\n</style>\n"],"mappings":";AA4GA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EAAG;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CAAC,CAAC;MAAG;MACfC,IAAI,EAAE;QACJC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,gBAAgB,EAAE,EAAE;QACpBC,gBAAgB,EAAE,EAAE;QACpBC,UAAU,EAAE,EAAE;QACdC,gBAAgB,EAAE,KAAK;QACvBP,QAAQ,EAAE,IAAI,CAACQ,EAAE,CAAG;MACtB,CAAC;MACDC,OAAO,EAAE,IAAI,CAAG;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAACJ,EAAE,CAAC;IAC9C,IAAI,CAACK,aAAa,CAAC,CAAC,EAAG;EACzB,CAAC;EACCC,OAAO,EAAE;IACT,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAChB,IAAI,CAAC;;QAEhF;QACAU,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,QAAQ,CAACjB,IAAI,CAAC;QAE/C,IAAIiB,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3BC,KAAK,CAAC,4BAA4B,CAAC;QACrC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C,IAAIA,KAAK,CAACJ,QAAQ,EAAE;UAClBL,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEQ,KAAK,CAACJ,QAAQ,CAACjB,IAAI,CAAC,EAAG;QACxD;MACF;IACF;EACF,CAAC;EACD;EACAsB,MAAMA,CAAA,EAAG;IACPV,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACX,IAAI,CAAC;IACpCU,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACH,OAAO,CAAC;IACtC,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC;MAAErB,IAAI,EAAE;IAAe,CAAC,CAAC;EAC7C;AAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}