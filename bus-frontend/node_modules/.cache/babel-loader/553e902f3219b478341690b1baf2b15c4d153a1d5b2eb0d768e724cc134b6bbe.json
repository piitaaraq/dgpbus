{"ast":null,"code":"import { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    token: localStorage.getItem('token') || null // Initialize token from localStorage\n  }),\n  getters: {\n    isAuthenticated: state => !!state.token // Check if the token exists\n  },\n  actions: {\n    async login(email, password) {\n      try {\n        console.log('Attempting login with email:', email); // Logging the start of login\n        const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/api/token/`, {\n          email,\n          password\n        });\n        if (response && response.data && response.data.access) {\n          console.log('Login successful, storing token:', response.data.access); // Logging successful token response\n          this.token = response.data.access;\n          localStorage.setItem('token', this.token); // Store the token in localStorage\n        } else {\n          console.log('Invalid login response');\n          throw new Error('Invalid login response');\n        }\n      } catch (error) {\n        console.error('Login failed:', error.response ? error.response.data : error.message);\n        throw new Error('Login failed. Please check your credentials.');\n      }\n    },\n    logout() {\n      try {\n        this.token = null;\n        localStorage.removeItem('token'); // Clear the token from localStorage\n      } catch (error) {\n        console.error('Error logging out:', error.message);\n      }\n    },\n    // Ensure the token is restored on app start\n    restoreToken() {\n      try {\n        this.token = localStorage.getItem('token');\n      } catch (error) {\n        console.error('Error restoring token:', error.message);\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useAuthStore","state","token","localStorage","getItem","getters","isAuthenticated","actions","login","email","password","console","log","response","post","process","env","VUE_APP_BACKEND_URL","data","access","setItem","Error","error","message","logout","removeItem","restoreToken"],"sources":["/home/peter/projects/bus-frontend/src/stores/auth.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport axios from 'axios';\n\nexport const useAuthStore = defineStore('auth', {\n    state: () => ({\n        token: localStorage.getItem('token') || null,  // Initialize token from localStorage\n    }),\n    getters: {\n        isAuthenticated: (state) => !!state.token,  // Check if the token exists\n    },\n    actions: {\nasync login(email, password) {\n    try {\n        console.log('Attempting login with email:', email);  // Logging the start of login\n        const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/api/token/`, {\n            email,\n            password,\n        });\n\n        if (response && response.data && response.data.access) {\n            console.log('Login successful, storing token:', response.data.access);  // Logging successful token response\n            this.token = response.data.access;\n            localStorage.setItem('token', this.token);  // Store the token in localStorage\n        } else {\n            console.log('Invalid login response');\n            throw new Error('Invalid login response');\n        }\n    } catch (error) {\n        console.error('Login failed:', error.response ? error.response.data : error.message);\n        throw new Error('Login failed. Please check your credentials.');\n    }\n},\n        logout() {\n            try {\n                this.token = null;\n                localStorage.removeItem('token');  // Clear the token from localStorage\n            } catch (error) {\n                console.error('Error logging out:', error.message);\n            }\n        },\n        // Ensure the token is restored on app start\n        restoreToken() {\n            try {\n                this.token = localStorage.getItem('token');\n            } catch (error) {\n                console.error('Error restoring token:', error.message);\n            }\n        },\n    },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC,MAAM,EAAE;EAC5CG,KAAK,EAAEA,CAAA,MAAO;IACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAG;EACnD,CAAC,CAAC;EACFC,OAAO,EAAE;IACLC,eAAe,EAAGL,KAAK,IAAK,CAAC,CAACA,KAAK,CAACC,KAAK,CAAG;EAChD,CAAC;EACDK,OAAO,EAAE;IACb,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;MACzB,IAAI;QACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,KAAK,CAAC,CAAC,CAAE;QACrD,MAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,aAAa,EAAE;UAC/ER,KAAK;UACLC;QACJ,CAAC,CAAC;QAEF,IAAIG,QAAQ,IAAIA,QAAQ,CAACK,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAACC,MAAM,EAAE;UACnDR,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEC,QAAQ,CAACK,IAAI,CAACC,MAAM,CAAC,CAAC,CAAE;UACxE,IAAI,CAACjB,KAAK,GAAGW,QAAQ,CAACK,IAAI,CAACC,MAAM;UACjChB,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAE,IAAI,CAAClB,KAAK,CAAC,CAAC,CAAE;QAChD,CAAC,MAAM;UACHS,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;UACrC,MAAM,IAAIS,KAAK,CAAC,wBAAwB,CAAC;QAC7C;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZX,OAAO,CAACW,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACT,QAAQ,GAAGS,KAAK,CAACT,QAAQ,CAACK,IAAI,GAAGI,KAAK,CAACC,OAAO,CAAC;QACpF,MAAM,IAAIF,KAAK,CAAC,8CAA8C,CAAC;MACnE;IACJ,CAAC;IACOG,MAAMA,CAAA,EAAG;MACL,IAAI;QACA,IAAI,CAACtB,KAAK,GAAG,IAAI;QACjBC,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC,CAAC,CAAE;MACvC,CAAC,CAAC,OAAOH,KAAK,EAAE;QACZX,OAAO,CAACW,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACtD;IACJ,CAAC;IACD;IACAG,YAAYA,CAAA,EAAG;MACX,IAAI;QACA,IAAI,CAACxB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC9C,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACZX,OAAO,CAACW,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC1D;IACJ;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}