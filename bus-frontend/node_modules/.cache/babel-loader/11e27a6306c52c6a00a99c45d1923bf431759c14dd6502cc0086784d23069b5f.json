{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: ['id'],\n  // Get hospital ID from the route params\n  data() {\n    return {\n      hospital: {},\n      // You can fetch hospital details by ID if needed\n      form: {\n        name: '',\n        room: '',\n        appointment_date: '',\n        appointment_time: '',\n        department: '',\n        needs_translator: false,\n        hospital: this.id // Automatically associate the hospital ID\n      },\n      busTime: null // Store the calculated bus time\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Send the form data to the backend\n        const response = await axios.post('http://localhost:8000/api/users/calculate_bus_time/', this.form);\n        if (response.data.success) {\n          // Set the calculated bus time\n          this.busTime = response.data.bus_time;\n        }\n      } catch (error) {\n        console.error('Error submitting form:', error);\n      }\n    }\n  },\n  mounted() {\n    // Fetch hospital details if necessary\n    this.fetchHospital();\n    // Example: axios.get(`/api/hospitals/${this.id}`).then(response => { this.hospital = response.data; });\n  }\n};","map":{"version":3,"names":["axios","props","data","hospital","form","name","room","appointment_date","appointment_time","department","needs_translator","id","busTime","methods","submitForm","response","post","success","bus_time","error","console","mounted","fetchHospital"],"sources":["/home/peter/projects/bus-frontend/src/views/HospitalForm.vue"],"sourcesContent":["<template>\n    <div class=\"hospital-form-container container\">\n      <div class=\"explanatory-text\">\n        <h2>About {{ hospital.hospital_name }}</h2>\n        <p>This hospital provides the best care. Please fill out the form to book your appointment.</p>\n      </div>\n  \n      <div class=\"form-section\">\n        <h2>Book an Appointment</h2>\n        <form @submit.prevent=\"submitForm\">\n          <div class=\"field\">\n            <label class=\"label\">Name</label>\n            <div class=\"control\">\n              <input class=\"input\" type=\"text\" v-model=\"form.name\" required />\n            </div>\n          </div>\n  \n          <div class=\"field\">\n            <label class=\"label\">Room</label>\n            <div class=\"control\">\n              <input class=\"input\" type=\"text\" v-model=\"form.room\" required />\n            </div>\n          </div>\n  \n          <div class=\"field\">\n            <label class=\"label\">Appointment Date</label>\n            <div class=\"control\">\n              <input class=\"input\" type=\"date\" v-model=\"form.appointment_date\" required />\n            </div>\n          </div>\n  \n          <div class=\"field\">\n            <label class=\"label\">Appointment Time</label>\n            <div class=\"control\">\n              <input class=\"input\" type=\"time\" v-model=\"form.appointment_time\" required />\n            </div>\n          </div>\n  \n          <div class=\"field\">\n            <label class=\"label\">Department</label>\n            <div class=\"control\">\n              <input class=\"input\" type=\"text\" v-model=\"form.department\" required />\n            </div>\n          </div>\n  \n          <div class=\"field\">\n            <div class=\"control\">\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" v-model=\"form.needs_translator\" /> I need a translator\n              </label>\n            </div>\n          </div>\n  \n          <div class=\"field\">\n            <div class=\"control\">\n              <button class=\"button is-primary\" type=\"submit\">Submit</button>\n            </div>\n          </div>\n        </form>\n  \n        <!-- Display the calculated bus time -->\n        <div v-if=\"busTime\">\n          <p><strong>Calculated Bus Time:</strong> {{ busTime }}</p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    props: ['id'], // Get hospital ID from the route params\n    data() {\n      return {\n        hospital: {}, // You can fetch hospital details by ID if needed\n        form: {\n          name: '',\n          room: '',\n          appointment_date: '',\n          appointment_time: '',\n          department: '',\n          needs_translator: false,\n          hospital: this.id, // Automatically associate the hospital ID\n        },\n        busTime: null, // Store the calculated bus time\n      };\n    },\n    methods: {\n      async submitForm() {\n        try {\n          // Send the form data to the backend\n          const response = await axios.post('http://localhost:8000/api/users/calculate_bus_time/', this.form);\n          if (response.data.success) {\n            // Set the calculated bus time\n            this.busTime = response.data.bus_time;\n          }\n        } catch (error) {\n          console.error('Error submitting form:', error);\n        }\n      },\n    },\n    mounted() {\n      // Fetch hospital details if necessary\n      this.fetchHospital();\n      // Example: axios.get(`/api/hospitals/${this.id}`).then(response => { this.hospital = response.data; });\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Flexbox layout for wide screens */\n  .hospital-form-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    padding: 20px;\n  }\n  \n  .explanatory-text {\n    flex: 1;\n    margin-right: 40px;\n    min-width: 300px;\n  }\n  \n  .form-section {\n    flex: 1;\n    min-width: 300px;\n  }\n  \n  @media (max-width: 768px) {\n    /* Stack content vertically for small screens */\n    .hospital-form-container {\n      flex-direction: column;\n    }\n    .explanatory-text,\n    .form-section {\n      margin-right: 0;\n    }\n  }\n  </style>\n  "],"mappings":"AAqEE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EAAE;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CAAC,CAAC;MAAE;MACdC,IAAI,EAAE;QACJC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,gBAAgB,EAAE,EAAE;QACpBC,gBAAgB,EAAE,EAAE;QACpBC,UAAU,EAAE,EAAE;QACdC,gBAAgB,EAAE,KAAK;QACvBP,QAAQ,EAAE,IAAI,CAACQ,EAAE,CAAE;MACrB,CAAC;MACDC,OAAO,EAAE,IAAI,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,qDAAqD,EAAE,IAAI,CAACZ,IAAI,CAAC;QACnG,IAAIW,QAAQ,CAACb,IAAI,CAACe,OAAO,EAAE;UACzB;UACA,IAAI,CAACL,OAAM,GAAIG,QAAQ,CAACb,IAAI,CAACgB,QAAQ;QACvC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}