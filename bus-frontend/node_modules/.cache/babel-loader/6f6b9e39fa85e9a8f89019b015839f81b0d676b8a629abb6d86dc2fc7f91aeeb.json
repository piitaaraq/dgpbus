{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5d6d63b0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"columns is-multiline\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = {\n  class: \"card-image\"\n};\nconst _hoisted_6 = {\n  class: \"image is-3by2\"\n};\nconst _hoisted_7 = [\"src\", \"alt\"];\nconst _hoisted_8 = {\n  class: \"card-content\"\n};\nconst _hoisted_9 = {\n  class: \"title\"\n};\nconst _hoisted_10 = {\n  class: \"subtitle\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Loop through hospitals and display each as a card \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.hospitals, hospital => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"column is-half\",\n      key: hospital.id,\n      onClick: $event => $options.navigateToForm(hospital.id)\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Card Image \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"figure\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: $options.getImagePath(hospital.image_path),\n      alt: hospital.hospital_name\n    }, null, 8 /* PROPS */, _hoisted_7)])]), _createCommentVNode(\" Card Content \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", _hoisted_9, _toDisplayString(hospital.hospital_name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_10, _toDisplayString(hospital.address), 1 /* TEXT */)])])], 8 /* PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_Fragment","_renderList","$data","hospitals","hospital","key","id","onClick","$event","$options","navigateToForm","_hoisted_4","_hoisted_5","_hoisted_6","src","getImagePath","image_path","alt","hospital_name","_hoisted_7","_hoisted_8","_hoisted_9","_toDisplayString","_hoisted_10","address","_hoisted_3"],"sources":["/home/peter/projects/bus-frontend/src/components/HospitalList.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"columns is-multiline\">\n      <!-- Loop through hospitals and display each as a card -->\n      <div class=\"column is-half\" v-for=\"hospital in hospitals\" :key=\"hospital.id\" @click=\"navigateToForm(hospital.id)\">\n        <div class=\"card\">\n          <!-- Card Image -->\n          <div class=\"card-image\">\n            <figure class=\"image is-3by2\">\n              <img :src=\"getImagePath(hospital.image_path)\" :alt=\"hospital.hospital_name\" />\n            </figure>\n          </div>\n\n          <!-- Card Content -->\n          <div class=\"card-content\">\n            <p class=\"title\">{{ hospital.hospital_name }}</p>\n            <p class=\"subtitle\">{{ hospital.address }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { backendUrl } from '@/config';\n\nexport default {\n  data() {\n    return {\n      hospitals: [],\n    };\n  },\n  mounted() {\n    this.fetchHospitals();\n  },\n  methods: {\n    async fetchHospitals() {\n      try {\n        const response = await axios.get(`${backendUrl}/api/hospitals/`);\n        this.hospitals = response.data; // Assign the hospital data to the component's state\n      } catch (error) {\n        console.error(\"Error fetching hospital data:\", error);\n      }\n    },\n    // Method to get the full path to the image\n    getImagePath(imageFilename) {\n      // Use require to dynamically load images from assets\n      return require(`@/assets/hospitals/${imageFilename}`);\n    },\n    navigateToForm(hospitalId) {\n      this.$router.push({ name: 'HospitalForm', params: { id: hospitalId } }); // Navigate to form\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* You can add additional styling if needed */\n.card {\n  cursor: pointer;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAsB;mBAFrC;;EAKaA,KAAK,EAAC;AAAM;;EAEVA,KAAK,EAAC;AAAY;;EACbA,KAAK,EAAC;AAAe;mBARzC;;EAceA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAAU;;uBAf7BC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,mBAAA,uDAA0D,G,kBAC1DJ,mBAAA,CAeMK,SAAA,QAnBZC,WAAA,CAIqDC,KAAA,CAAAC,SAAS,EAArBC,QAAQ;yBAA3CT,mBAAA,CAeM;MAfDD,KAAK,EAAC,gBAAgB;MAAgCW,GAAG,EAAED,QAAQ,CAACE,EAAE;MAAGC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,CAACN,QAAQ,CAACE,EAAE;QAC7GT,mBAAA,CAaM,OAbNc,UAaM,GAZJZ,mBAAA,gBAAmB,EACnBF,mBAAA,CAIM,OAJNe,UAIM,GAHJf,mBAAA,CAES,UAFTgB,UAES,GADPhB,mBAAA,CAA8E;MAAxEiB,GAAG,EAAEL,QAAA,CAAAM,YAAY,CAACX,QAAQ,CAACY,UAAU;MAAIC,GAAG,EAAEb,QAAQ,CAACc;4BAT3EC,UAAA,E,KAaUpB,mBAAA,kBAAqB,EACrBF,mBAAA,CAGM,OAHNuB,UAGM,GAFJvB,mBAAA,CAAiD,KAAjDwB,UAAiD,EAAAC,gBAAA,CAA7BlB,QAAQ,CAACc,aAAa,kBAC1CrB,mBAAA,CAA8C,KAA9C0B,WAA8C,EAAAD,gBAAA,CAAvBlB,QAAQ,CAACoB,OAAO,iB,qBAhBnDC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}