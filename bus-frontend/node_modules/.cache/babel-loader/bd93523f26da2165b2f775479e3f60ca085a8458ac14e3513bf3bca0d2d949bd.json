{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: ['id'],\n  // Get hospital ID from the route params\n  data() {\n    return {\n      hospital: {},\n      // Store hospital details\n      form: {\n        name: '',\n        room: '',\n        appointment_date: '',\n        appointment_time: '',\n        department: '',\n        needs_translator: false,\n        hospital: this.id // Automatically associate the hospital ID\n      },\n      busTime: null // Store the calculated bus time\n    };\n  },\n  mounted() {\n    this.fetchHospital(); // Fetch hospital details when the component mounts\n  },\n  methods: {\n    // Method to fetch hospital details based on the passed ID\n    async fetchHospital() {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/hospitals/${this.id}`);\n        this.hospital = response.data; // Assign hospital details to state\n      } catch (error) {\n        console.error('Error fetching hospital data:', error);\n      }\n    },\n    async goToConfirmation() {\n      console.log('Form data before submission:', this.form); // Log the form data before navigating\n      try {\n        const response = await axios.post('http://localhost:8000/api/users/calculate_bus_time/', this.form);\n        this.busTime = response.data.bus_time;\n        console.log('Bus time:', this.busTime); // Log the bus time\n\n        // Navigate to the confirmation page with form data and bus time\n        this.$router.push({\n          name: 'ConfirmForm',\n          params: {\n            formData: this.form,\n            // Passing form data\n            busTime: this.busTime // Passing bus time\n          }\n        });\n      } catch (error) {\n        console.error('Error calculating bus time:', error);\n      }\n    },\n    // Navigate back to the hospital list view\n    goBack() {\n      console.log('Form data:', this.form);\n      console.log('Bus time:', this.busTime);\n      this.$router.push({\n        name: 'HospitalList'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","props","data","hospital","form","name","room","appointment_date","appointment_time","department","needs_translator","id","busTime","mounted","fetchHospital","methods","response","get","error","console","goToConfirmation","log","post","bus_time","$router","push","params","formData","goBack"],"sources":["/home/peter/projects/bus-frontend/src/views/HospitalForm.vue"],"sourcesContent":["<template>\n  <div class=\"hospital-form-container container\">\n    <div class=\"explanatory-text\">\n      <p class=\"is-size-4\">\n        Nakorsiarnissat pillugu paasissutissat immersussavatit. Qanoq ateqarnerlutit,\n        kinguliat ilanngutinngikkaluarlugu allassvat. Qassimi ineqarnerlutit aamma narkorsiarnissavit ullua,\n        piffissaa napparsimmavimmilu immikkoortumi sumiinnersoq ilanngullguti immersussavatit.</p>\n      <p class=\"is-size-4\">\n        Immersugassat tamakkerukkit ingerlaqqissaatit.\n      </p>\n      <p class=\"is-size-4\">\n        Kalaallit Peqqissartut Illuannut utertussaasimaguit \"Uterit\" tuussavat.\n      </p>\n    </div>\n\n    <div class=\"form-section\">\n      <h2>Nakorsiarnissat pillugu</h2>\n      <form @submit.prevent=\"submitForm\">\n        <div class=\"field\">\n          <label class=\"label\">Atit</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"text\" v-model=\"form.name\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Inivit normua</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"text\" v-model=\"form.room\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Nakorsiarfissavit ullua</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"date\" v-model=\"form.appointment_date\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Piffissaq</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"time\" v-model=\"form.appointment_time\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Napparsimmavimmi immikkoortoq</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"text\" v-model=\"form.department\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Oqalutsimik pisariaqartitsivit?</label>\n          <div class=\"control\">\n            <label class=\"radio\">\n              <input type=\"radio\" v-model=\"form.needs_translator\" :value=\"true\" /> Aap\n            </label>\n            <label class=\"radio\">\n              <input type=\"radio\" v-model=\"form.needs_translator\" :value=\"false\" /> Naamik\n            </label>\n          </div>\n        </div>\n        <div class=\"field is-grouped mt-4\" style=\"display: flex; gap: 10px;\">\n\n          <div class=\"control\">\n            <button class=\"button is-primary\" type=\"button\" @click=\"goToConfirmation\">Ingerlaqqigit</button>\n          </div>\n          <div class=\"control\">\n            <button class=\"button is-light\" type=\"button\" @click=\"goBack\">Uterit</button>\n          </div>\n        </div>\n      </form>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: ['id'],  // Get hospital ID from the route params\n  data() {\n    return {\n      hospital: {},  // Store hospital details\n      form: {\n        name: '',\n        room: '',\n        appointment_date: '',\n        appointment_time: '',\n        department: '',\n        needs_translator: false,\n        hospital: this.id,  // Automatically associate the hospital ID\n      },\n      busTime: null,  // Store the calculated bus time\n    };\n  },\n  mounted() {\n    this.fetchHospital();  // Fetch hospital details when the component mounts\n  },\n  methods: {\n    // Method to fetch hospital details based on the passed ID\n    async fetchHospital() {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/hospitals/${this.id}`);\n        this.hospital = response.data;  // Assign hospital details to state\n      } catch (error) {\n        console.error('Error fetching hospital data:', error);\n      }\n    },\n\n    async goToConfirmation() {\n      console.log('Form data before submission:', this.form);  // Log the form data before navigating\n      try {\n        const response = await axios.post('http://localhost:8000/api/users/calculate_bus_time/', this.form);\n        this.busTime = response.data.bus_time;\n\n        console.log('Bus time:', this.busTime);  // Log the bus time\n\n        // Navigate to the confirmation page with form data and bus time\n        this.$router.push({\n          name: 'ConfirmForm',\n          params: {\n            formData: this.form,  // Passing form data\n            busTime: this.busTime  // Passing bus time\n          }\n        });\n      } catch (error) {\n        console.error('Error calculating bus time:', error);\n      }\n    },\n\n    // Navigate back to the hospital list view\n    goBack() {\n      console.log('Form data:', this.form);\n      console.log('Bus time:', this.busTime);\n      this.$router.push({ name: 'HospitalList' });\n    }\n  },\n};\n</script>\n\n\n<style scoped>\n/* Flexbox layout for wide screens */\n.hospital-form-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 20px;\n}\n\n.explanatory-text {\n  flex: 1;\n  margin-right: 40px;\n  min-width: 300px;\n}\n\n.form-section {\n  flex: 1;\n  min-width: 300px;\n}\n\n@media (max-width: 768px) {\n\n  /* Stack content vertically for small screens */\n  .hospital-form-container {\n    flex-direction: column;\n  }\n\n  .explanatory-text,\n  .form-section {\n    margin-right: 0;\n  }\n}\n\n.radio {\n  margin-right: 30px;\n}\n</style>"],"mappings":";AAgFA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EAAG;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CAAC,CAAC;MAAG;MACfC,IAAI,EAAE;QACJC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,gBAAgB,EAAE,EAAE;QACpBC,gBAAgB,EAAE,EAAE;QACpBC,UAAU,EAAE,EAAE;QACdC,gBAAgB,EAAE,KAAK;QACvBP,QAAQ,EAAE,IAAI,CAACQ,EAAE,CAAG;MACtB,CAAC;MACDC,OAAO,EAAE,IAAI,CAAG;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC,EAAG;EACzB,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,uCAAuC,IAAI,CAACN,EAAE,EAAE,CAAC;QAClF,IAAI,CAACR,QAAO,GAAIa,QAAQ,CAACd,IAAI,EAAG;MAClC,EAAE,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAED,MAAME,gBAAgBA,CAAA,EAAG;MACvBD,OAAO,CAACE,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAACjB,IAAI,CAAC,EAAG;MACzD,IAAI;QACF,MAAMY,QAAO,GAAI,MAAMhB,KAAK,CAACsB,IAAI,CAAC,qDAAqD,EAAE,IAAI,CAAClB,IAAI,CAAC;QACnG,IAAI,CAACQ,OAAM,GAAII,QAAQ,CAACd,IAAI,CAACqB,QAAQ;QAErCJ,OAAO,CAACE,GAAG,CAAC,WAAW,EAAE,IAAI,CAACT,OAAO,CAAC,EAAG;;QAEzC;QACA,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC;UAChBpB,IAAI,EAAE,aAAa;UACnBqB,MAAM,EAAE;YACNC,QAAQ,EAAE,IAAI,CAACvB,IAAI;YAAG;YACtBQ,OAAO,EAAE,IAAI,CAACA,OAAM,CAAG;UACzB;QACF,CAAC,CAAC;MACJ,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAED;IACAU,MAAMA,CAAA,EAAG;MACPT,OAAO,CAACE,GAAG,CAAC,YAAY,EAAE,IAAI,CAACjB,IAAI,CAAC;MACpCe,OAAO,CAACE,GAAG,CAAC,WAAW,EAAE,IAAI,CAACT,OAAO,CAAC;MACtC,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC;QAAEpB,IAAI,EAAE;MAAe,CAAC,CAAC;IAC7C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}