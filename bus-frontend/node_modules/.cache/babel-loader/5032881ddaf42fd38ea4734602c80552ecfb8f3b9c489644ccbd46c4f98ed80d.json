{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-96cdd5ce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"translator-view-container container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Patienter med behov for tolk\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"table is-fullwidth\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Nakorsiarfissaq\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Napparsimmavik\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Immikkoortoq\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Paasissutissat\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = [\"rowspan\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.bustime\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.name\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"confirm.room\")), 1 /* TEXT */), _hoisted_4, _hoisted_5, _createCommentVNode(\" Hospital Name Column \"), _hoisted_6, _hoisted_7])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedRides, ride => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: ride.id\n    }, [_createCommentVNode(\" First row for each ride's users \"), ride.patients && ride.patients.length > 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_8, [_createElementVNode(\"td\", {\n      rowspan: ride.users.length\n    }, _toDisplayString(ride.departure_time), 9 /* TEXT, PROPS */, _hoisted_9), _createElementVNode(\"td\", null, _toDisplayString(ride.patients[0].name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.patients[0].room), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.patients[0].appointment_time), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.patients[0].hospital_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.patients[0].department), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.patients[0].description), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Subsequent rows for remaining users \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(ride.patients.slice(1), patient => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: patient.id\n      }, [_createElementVNode(\"td\", null, _toDisplayString(patient.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.room), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","$t","_hoisted_4","_hoisted_5","_createCommentVNode","_hoisted_6","_hoisted_7","_Fragment","_renderList","$options","sortedRides","ride","id","patients","length","_hoisted_8","rowspan","users","departure_time","_hoisted_9","name","room","appointment_time","hospital_name","department","description","slice","patient"],"sources":["/home/peter/projects/bus-frontend/src/views/TranslatorView.vue"],"sourcesContent":["<template>\n    <div class=\"translator-view-container container\">\n        <h2>Patienter med behov for tolk</h2>\n\n        <table class=\"table is-fullwidth\">\n            <thead>\n                <tr>\n                    <th>{{ $t(\"confirm.bustime\") }} </th>\n                    <th>{{ $t(\"confirm.name\") }} </th>\n                    <th>{{ $t(\"confirm.room\") }} </th>\n                    <th>Nakorsiarfissaq</th>\n                    <th>Napparsimmavik</th> <!-- Hospital Name Column -->\n                    <th>Immikkoortoq</th>\n                    <th>Paasissutissat</th>\n                </tr>\n            </thead>\n            <tbody>\n                <template v-for=\"ride in sortedRides\" :key=\"ride.id\">\n                    <!-- First row for each ride's users -->\n                    <tr v-if=\"ride.patients && ride.patients.length > 0\">\n                        <td :rowspan=\"ride.users.length\">{{ ride.departure_time }}</td>\n                        <td>{{ ride.patients[0].name }}</td>\n                        <td>{{ ride.patients[0].room }}</td>\n                        <td>{{ ride.patients[0].appointment_time }}</td>\n                        <td>{{ ride.patients[0].hospital_name }}</td>\n                        <td>{{ ride.patients[0].department }}</td>\n                        <td>{{ ride.patients[0].description }}</td>\n                    </tr>\n                    <!-- Subsequent rows for remaining users -->\n                    <tr v-for=\"patient in ride.patients.slice(1)\" :key=\"patient.id\">\n                        <td>{{ patient.name }}</td>\n                        <td>{{ patient.room }}</td>\n                    </tr>\n                </template>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            rides: []\n        };\n    },\n    computed: {\n        sortedRides() {\n            return [...this.rides].sort((a, b) => {\n                const timeA = new Date(`1970-01-01T${a.departure_time}`);\n                const timeB = new Date(`1970-01-01T${b.departure_time}`);\n                return timeA - timeB;\n            });\n        }\n    },\n    mounted() {\n        this.fetchRides();\n    },\n    methods: {\n        async fetchRides() {\n            try {\n                const response = await axios.get('http://localhost:8000/api/rides/today');\n                this.rides = response.data;\n            } catch (error) {\n                console.error('Error fetching rides:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.translator-view-container {\n    padding: 20px;\n}\n\n.table {\n    margin-top: 20px;\n}\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAqC;gEAC5CC,mBAAA,CAAqC,YAAjC,8BAA4B;;EAEzBD,KAAK,EAAC;AAAoB;gEAMrBC,mBAAA,CAAwB,YAApB,iBAAe;gEACnBA,mBAAA,CAAuB,YAAnB,gBAAc;gEAClBA,mBAAA,CAAqB,YAAjB,cAAY;gEAChBA,mBAAA,CAAuB,YAAnB,gBAAc;;EAbtCC,GAAA;AAAA;mBAAA;;uBACIC,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCFC,UAAqC,EAErCJ,mBAAA,CA+BQ,SA/BRK,UA+BQ,GA9BJL,mBAAA,CAUQ,gBATJA,mBAAA,CAQK,aAPDA,mBAAA,CAAqC,YAAAM,gBAAA,CAA9BC,IAAA,CAAAC,EAAE,qCACTR,mBAAA,CAAkC,YAAAM,gBAAA,CAA3BC,IAAA,CAAAC,EAAE,kCACTR,mBAAA,CAAkC,YAAAM,gBAAA,CAA3BC,IAAA,CAAAC,EAAE,kCACTC,UAAwB,EACxBC,UAAuB,EAACC,mBAAA,0BAA6B,EACrDC,UAAqB,EACrBC,UAAuB,C,KAG/Bb,mBAAA,CAkBQ,iB,kBAjBJE,mBAAA,CAgBWY,SAAA,QAjC3BC,WAAA,CAiByCC,QAAA,CAAAC,WAAW,EAAnBC,IAAI;yBAjBrChB,mBAAA,CAAAY,SAAA;MAAAb,GAAA,EAiB4DiB,IAAI,CAACC;QAC7CR,mBAAA,qCAAwC,EAC9BO,IAAI,CAACE,QAAQ,IAAIF,IAAI,CAACE,QAAQ,CAACC,MAAM,Q,cAA/CnB,mBAAA,CAQK,MA3BzBoB,UAAA,GAoBwBtB,mBAAA,CAA+D;MAA1DuB,OAAO,EAAEL,IAAI,CAACM,KAAK,CAACH;wBAAWH,IAAI,CAACO,cAAc,wBApB/EC,UAAA,GAqBwB1B,mBAAA,CAAoC,YAAAM,gBAAA,CAA7BY,IAAI,CAACE,QAAQ,IAAIO,IAAI,kBAC5B3B,mBAAA,CAAoC,YAAAM,gBAAA,CAA7BY,IAAI,CAACE,QAAQ,IAAIQ,IAAI,kBAC5B5B,mBAAA,CAAgD,YAAAM,gBAAA,CAAzCY,IAAI,CAACE,QAAQ,IAAIS,gBAAgB,kBACxC7B,mBAAA,CAA6C,YAAAM,gBAAA,CAAtCY,IAAI,CAACE,QAAQ,IAAIU,aAAa,kBACrC9B,mBAAA,CAA0C,YAAAM,gBAAA,CAAnCY,IAAI,CAACE,QAAQ,IAAIW,UAAU,kBAClC/B,mBAAA,CAA2C,YAAAM,gBAAA,CAApCY,IAAI,CAACE,QAAQ,IAAIY,WAAW,iB,KA1B3DrB,mBAAA,gBA4BoBA,mBAAA,yCAA4C,G,kBAC5CT,mBAAA,CAGKY,SAAA,QAhCzBC,WAAA,CA6B0CG,IAAI,CAACE,QAAQ,CAACa,KAAK,KAA9BC,OAAO;2BAAlBhC,mBAAA,CAGK;QAH0CD,GAAG,EAAEiC,OAAO,CAACf;UACxDnB,mBAAA,CAA2B,YAAAM,gBAAA,CAApB4B,OAAO,CAACP,IAAI,kBACnB3B,mBAAA,CAA2B,YAAAM,gBAAA,CAApB4B,OAAO,CAACN,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}