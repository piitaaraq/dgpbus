{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-57ba0680\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"taxi-users-container container\"\n};\nconst _hoisted_2 = {\n  class: \"title is-2\"\n};\nconst _hoisted_3 = {\n  class: \"title is-4\"\n};\nconst _hoisted_4 = {\n  class: \"table is-fullwidth is-striped\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"title is-4\"\n};\nconst _hoisted_7 = {\n  class: \"table is-fullwidth is-striped\"\n};\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString(_ctx.$t(\"taxi.heading\")), 1 /* TEXT */), _createCommentVNode(\" Table for today's appointments \"), _createElementVNode(\"h3\", _hoisted_3, _toDisplayString(_ctx.$t(\"taxi.today\")), 1 /* TEXT */), _createElementVNode(\"table\", _hoisted_4, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.name\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.phone\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.appDate\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.appTime\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.hospital\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.department\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.hasTaxi\")), 1 /* TEXT */), _createCommentVNode(\" Column for taxi status \"), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.shiftTaxi\")), 1 /* TEXT */), _createCommentVNode(\" Button to order a taxi \")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.todaysPatients, patient => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: patient.id,\n      class: _normalizeClass({\n        'has-taxi': patient.has_taxi\n      })\n    }, [_createElementVNode(\"td\", null, _toDisplayString(patient.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.phone_no), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(patient.appointment_date)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatTime(patient.appointment_time)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.hospital_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.department), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatBoolean(patient.has_taxi)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.toggleTaxi(patient),\n      class: _normalizeClass(['button taxi-btn', patient.has_taxi ? 'is-warning' : 'is-success'])\n    }, _toDisplayString(patient.has_taxi ? _ctx.$t('taxi.cancel') : _ctx.$t('taxi.order')), 11 /* TEXT, CLASS, PROPS */, _hoisted_5)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Table for tomorrow's appointments \"), _createElementVNode(\"h3\", _hoisted_6, _toDisplayString(_ctx.$t(\"taxi.tomorrow\")), 1 /* TEXT */), _createElementVNode(\"table\", _hoisted_7, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.name\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.phone\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.appDate\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.appTime\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.hospital\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.department\")), 1 /* TEXT */), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.hasTaxi\")), 1 /* TEXT */), _createCommentVNode(\" Column for taxi status \"), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t(\"taxi.shiftTaxi\")), 1 /* TEXT */), _createCommentVNode(\" Button to order a taxi \")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.tomorrowsPatients, patient => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: patient.id,\n      class: _normalizeClass({\n        'has-taxi': patient.has_taxi\n      })\n    }, [_createElementVNode(\"td\", null, _toDisplayString(patient.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.phone_no), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(patient.appointment_date)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatTime(patient.appointment_time)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.hospital_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(patient.department), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatBoolean(patient.has_taxi)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.toggleTaxi(patient),\n      class: _normalizeClass(['button taxi-btn', patient.has_taxi ? 'is-warning' : 'is-success'])\n    }, _toDisplayString(patient.has_taxi ? _ctx.$t('taxi.cancel') : _ctx.$t('taxi.order')), 11 /* TEXT, CLASS, PROPS */, _hoisted_8)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","_ctx","$t","_createCommentVNode","_hoisted_3","_hoisted_4","_Fragment","_renderList","$options","todaysPatients","patient","key","id","_normalizeClass","has_taxi","name","phone_no","formatDate","appointment_date","formatTime","appointment_time","hospital_name","department","formatBoolean","onClick","$event","toggleTaxi","_hoisted_5","_hoisted_6","_hoisted_7","tomorrowsPatients","_hoisted_8"],"sources":["/home/peter/projects/bus-frontend/src/views/TaxiUsers.vue"],"sourcesContent":["<template>\n    <div class=\"taxi-users-container container\">\n        <h2 class=\"title is-2\">{{ $t(\"taxi.heading\") }}</h2>\n\n        <!-- Table for today's appointments -->\n        <h3 class=\"title is-4\">{{ $t(\"taxi.today\") }}</h3>\n        <table class=\"table is-fullwidth is-striped\">\n            <thead>\n                <tr>\n                    <th>{{ $t(\"taxi.name\") }}</th>\n                    <th>{{ $t(\"taxi.phone\") }}</th>\n                    <th>{{ $t(\"taxi.appDate\") }}</th>\n                    <th>{{ $t(\"taxi.appTime\") }}</th>\n                    <th>{{ $t(\"taxi.hospital\") }}</th>\n                    <th>{{ $t(\"taxi.department\") }}</th>\n                    <th>{{ $t(\"taxi.hasTaxi\") }}</th> <!-- Column for taxi status -->\n                    <th>{{ $t(\"taxi.shiftTaxi\") }}</th> <!-- Button to order a taxi -->\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"patient in todaysPatients\" :key=\"patient.id\" :class=\"{ 'has-taxi': patient.has_taxi }\">\n                    <td>{{ patient.name }}</td>\n                    <td>{{ patient.phone_no }}</td>\n                    <td>{{ formatDate(patient.appointment_date) }}</td>\n                    <td>{{ formatTime(patient.appointment_time) }}</td>\n                    <td>{{ patient.hospital_name }}</td>\n                    <td>{{ patient.department }}</td>\n                    <td>{{ formatBoolean(patient.has_taxi) }}</td>\n                    <td>\n                        <button @click=\"toggleTaxi(patient)\"\n                            :class=\"['button taxi-btn', patient.has_taxi ? 'is-warning' : 'is-success']\">\n                            {{ patient.has_taxi ? $t('taxi.cancel') : $t('taxi.order') }}\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <!-- Table for tomorrow's appointments -->\n        <h3 class=\"title is-4\">{{ $t(\"taxi.tomorrow\") }}</h3>\n        <table class=\"table is-fullwidth is-striped\">\n            <thead>\n                <tr>\n                    <th>{{ $t(\"taxi.name\") }}</th>\n                    <th>{{ $t(\"taxi.phone\") }}</th>\n                    <th>{{ $t(\"taxi.appDate\") }}</th>\n                    <th>{{ $t(\"taxi.appTime\") }}</th>\n                    <th>{{ $t(\"taxi.hospital\") }}</th>\n                    <th>{{ $t(\"taxi.department\") }}</th>\n                    <th>{{ $t(\"taxi.hasTaxi\") }}</th> <!-- Column for taxi status -->\n                    <th>{{ $t(\"taxi.shiftTaxi\") }}</th> <!-- Button to order a taxi -->\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"patient in tomorrowsPatients\" :key=\"patient.id\" :class=\"{ 'has-taxi': patient.has_taxi }\">\n                    <td>{{ patient.name }}</td>\n                    <td>{{ patient.phone_no }}</td>\n                    <td>{{ formatDate(patient.appointment_date) }}</td>\n                    <td>{{ formatTime(patient.appointment_time) }}</td>\n                    <td>{{ patient.hospital_name }}</td>\n                    <td>{{ patient.department }}</td>\n                    <td>{{ formatBoolean(patient.has_taxi) }}</td>\n                    <td>\n                        <button @click=\"toggleTaxi(patient)\"\n                            :class=\"['button taxi-btn', patient.has_taxi ? 'is-warning' : 'is-success']\">\n                            {{ patient.has_taxi ? $t('taxi.cancel') : $t('taxi.order') }}\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            patients: []  // All patients\n        };\n    },\n    computed: {\n        todaysPatients() {\n            const today = new Date().toISOString().slice(0, 10);  // Get today's date in YYYY-MM-DD format\n            return this.patients.filter(patient => patient.appointment_date === today);\n        },\n        tomorrowsPatients() {\n            const tomorrow = new Date();\n            tomorrow.setDate(tomorrow.getDate() + 1);  // Get tomorrow's date\n            const tomorrowStr = tomorrow.toISOString().slice(0, 10);  // Format as YYYY-MM-DD\n            return this.patients.filter(patient => patient.appointment_date === tomorrowStr);\n        }\n    },\n    mounted() {\n        this.fetchPatients();\n    },\n    methods: {\n        async fetchPatients() {\n            try {\n                const response = await axios.get('http://localhost:8000/api/patients/taxi-users/');\n                this.patients = response.data;\n            } catch (error) {\n                console.error('Error fetching patients:', error);\n            }\n        },\n        async toggleTaxi(patient) {\n            try {\n                const response = await axios.patch(`http://localhost:8000/api/patients/${patient.id}/toggle-taxi/`);\n                patient.has_taxi = response.data.has_taxi;\n            } catch (error) {\n                console.error('Error toggling taxi status:', error);\n            }\n        },\n        formatDate(date) {\n            const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\n            return new Date(date).toLocaleDateString('en-GB', options);\n        },\n        formatTime(time) {\n            return time ? time.substring(0, 5) : '';\n        },\n        formatBoolean(value) {\n            const locale = this.$i18n.locale;\n            if (locale === 'da') {\n                return value ? 'Ja' : 'Nej';\n            } else if (locale === 'gl') {\n                return value ? 'Aap' : 'Naamik';\n            }\n            return value ? 'yes' : 'no';\n        }\n    }\n};\n</script>\n\n<style scoped>\n.taxi-users-container {\n    padding: 20px;\n}\n\n.table {\n    margin-top: 20px;\n}\n\n.has-taxi {\n    background-color: lightgray;\n}\n\n.taxi-btn {\n    width: 100px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}