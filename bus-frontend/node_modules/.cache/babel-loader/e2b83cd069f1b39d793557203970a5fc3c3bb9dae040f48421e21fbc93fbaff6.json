{"ast":null,"code":"// src/router/index.js\n\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomePage from '../views/HomePage.vue'; // Ensure the paths are correct\nimport AboutPage from '../views/AboutPage.vue'; // Ensure the paths are correct\nimport HospitalForm from '../views/HospitalForm.vue'; // Import HospitalForm component\nimport ConfirmForm from '../views/ConfirmForm.vue';\nimport HospitalList from '@/views/HospitalList.vue';\nimport EditForm from '../views/EditForm.vue';\nimport RidesToday from '../views/RidesToday.vue';\nimport AdminDashboard from '@/views/AdminDashboard.vue';\nimport BusSchedules from '@/views/BusSchedules.vue';\nimport TaxiUsers from '@/views/TaxiUsers.vue';\nimport RegisteredRides from '@/views/RegisteredRides.vue';\nimport DriverView from '@/views/DriverView.vue';\nimport TranslatorView from '@/views/TranslatorView.vue';\nimport PendingApprovals from '@/views/PendingApprovals.vue';\n// import axios from 'axios';\n\nconst routes = [{\n  path: '/',\n  name: 'HomePage',\n  component: HomePage,\n  meta: {\n    breadcrumbs: [{\n      name: \"home\"\n    }]\n  }\n}, {\n  path: '/login',\n  name: 'LoginPage',\n  component: () => import('@/views/LoginPage.vue'),\n  meta: {\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"login\"\n    }]\n  }\n}, {\n  path: '/registrer',\n  name: 'RegisterUser',\n  component: () => import('@/views/Register.vue'),\n  meta: {\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"register\"\n    }]\n  }\n}, {\n  path: '/admin/pending-approvals',\n  name: 'PendingApprovals',\n  component: PendingApprovals,\n  meta: {\n    requiresAuth: true,\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"approve\"\n    }]\n  }\n}, {\n  path: '/hospitals',\n  name: 'HospitalList',\n  component: HospitalList,\n  meta: {\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"hospitals\"\n    }]\n  }\n}, {\n  path: '/hospital/:id',\n  // Dynamic route for HospitalForm with :id as a parameter\n  name: 'HospitalForm',\n  component: HospitalForm,\n  props: true,\n  // Pass the route parameters as props to the component\n  meta: {\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"hospitals\",\n      link: \"/hospitals\"\n    }, {\n      name: \"hospitalform\"\n    }]\n  }\n}, {\n  path: '/confirm',\n  name: 'ConfirmForm',\n  component: ConfirmForm,\n  props: route => ({\n    formData: route.params.formData,\n    busTime: route.params.busTime\n  }),\n  meta: {\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"hospitals\",\n      link: \"/hospitals\"\n    }, {\n      name: \"confirmform\"\n    }]\n  }\n}, {\n  path: '/rides-today',\n  name: 'RidesToday',\n  component: RidesToday,\n  meta: {\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"ridestoday\"\n    }]\n  }\n}, {\n  path: '/edit/:userId',\n  name: 'EditForm',\n  component: EditForm,\n  props: true,\n  meta: {\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"edit\"\n    }]\n  }\n}, {\n  path: '/about',\n  name: 'AboutPage',\n  component: AboutPage,\n  // Reference the correct component\n  meta: {\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"about\"\n    }]\n  }\n}, {\n  path: '/dashboard',\n  name: 'AdminDashboard',\n  component: AdminDashboard,\n  meta: {\n    requiresStaff: true,\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"dashboard\"\n    }]\n  }\n}, {\n  path: '/bus-schedules',\n  name: 'BusSchedules',\n  component: BusSchedules\n}, {\n  path: '/taxi-users',\n  name: 'TaxiUsers',\n  component: TaxiUsers,\n  meta: {\n    requiresStaff: true,\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"dashboard\",\n      link: \"/dashboard\"\n    }, {\n      name: \"taxi\"\n    }]\n  }\n}, {\n  path: '/translators',\n  name: 'TranslatorView',\n  component: TranslatorView,\n  meta: {\n    requiresStaff: true,\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"dashboard\",\n      link: \"/dashboard\"\n    }, {\n      name: \"translators\"\n    }]\n  }\n}, {\n  path: '/registered-rides',\n  name: 'RegisteredRides',\n  component: RegisteredRides,\n  meta: {\n    requiresStaff: true,\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"dashboard\",\n      link: \"/dashboard\"\n    }, {\n      name: \"rides\"\n    }]\n  }\n}, {\n  path: '/driver-view',\n  name: 'DriverView',\n  component: DriverView,\n  meta: {\n    requiresStaff: true,\n    breadcrumbs: [{\n      name: \"home\",\n      link: \"/\"\n    }, {\n      name: \"dashboard\",\n      link: \"/dashboard\"\n    }, {\n      name: \"drivers\"\n    }]\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  // Check if the route requires staff permissions\n  if (to.matched.some(record => record.meta.requiresStaff)) {\n    const token = localStorage.getItem('token'); // Get the token from localStorage\n    if (!token) {\n      // If no token is found, redirect to the login page\n      return next('/login');\n    } else {\n      // Verify token and user role if necessary (optional)\n      next();\n    }\n  } else {\n    // If route does not require authentication, just proceed\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomePage","AboutPage","HospitalForm","ConfirmForm","HospitalList","EditForm","RidesToday","AdminDashboard","BusSchedules","TaxiUsers","RegisteredRides","DriverView","TranslatorView","PendingApprovals","routes","path","name","component","meta","breadcrumbs","link","requiresAuth","props","route","formData","params","busTime","requiresStaff","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","token","localStorage","getItem"],"sources":["/home/peter/projects/bus-frontend/src/router/index.js"],"sourcesContent":["// src/router/index.js\n\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomePage from '../views/HomePage.vue';  // Ensure the paths are correct\nimport AboutPage from '../views/AboutPage.vue'; // Ensure the paths are correct\nimport HospitalForm from '../views/HospitalForm.vue'; // Import HospitalForm component\nimport ConfirmForm from '../views/ConfirmForm.vue';\nimport HospitalList from '@/views/HospitalList.vue';\nimport EditForm from '../views/EditForm.vue';\nimport RidesToday from '../views/RidesToday.vue';\nimport AdminDashboard from '@/views/AdminDashboard.vue';\nimport BusSchedules from '@/views/BusSchedules.vue';\nimport TaxiUsers from '@/views/TaxiUsers.vue';\nimport RegisteredRides from '@/views/RegisteredRides.vue';\nimport DriverView from '@/views/DriverView.vue';\nimport TranslatorView from '@/views/TranslatorView.vue';\nimport PendingApprovals from '@/views/PendingApprovals.vue';\n// import axios from 'axios';\n\n\nconst routes = [\n  {\n    path: '/',\n    name: 'HomePage',\n    component: HomePage,\n    meta: {\n      breadcrumbs: [\n        { name: \"home\" }\n      ]\n    } \n  },\n  {\n  path: '/login',\n  name: 'LoginPage',\n  component: () => import('@/views/LoginPage.vue'),\n  meta: {\n    breadcrumbs: [\n      { name: \"home\", link: \"/\" },\n      { name: \"login\", }\n    ]\n  }\n  },\n  {\n  path: '/registrer',\n  name: 'RegisterUser',\n  component: () => import('@/views/Register.vue'),\n  meta: {\n    breadcrumbs: [\n      { name: \"home\", link: \"/\" },\n      { name: \"register\" }\n    ]\n  }\n  },\n  {\n  path: '/admin/pending-approvals',\n  name: 'PendingApprovals',\n  component: PendingApprovals,\n  meta: { \n    requiresAuth: true,\n    breadcrumbs: [\n      { name: \"home\", link: \"/\" },\n      { name: \"approve\" }\n    ] \n  }, \n\n  },\n  {\n    path: '/hospitals',\n    name: 'HospitalList',\n    component: HospitalList,\n    meta: {\n      breadcrumbs: [\n      { name: \"home\", link: \"/\" },\n      { name: \"hospitals\" }\n      ]\n    }\n  },\n  {\n    path: '/hospital/:id', // Dynamic route for HospitalForm with :id as a parameter\n    name: 'HospitalForm',\n    component: HospitalForm,\n    props: true, // Pass the route parameters as props to the component\n    meta: {\n      breadcrumbs: [\n        { name: \"home\", link: \"/\" },\n        { name: \"hospitals\", link: \"/hospitals\" },\n        { name: \"hospitalform\" }\n      ]\n    }\n  },\n  {\n  path: '/confirm',\n  name: 'ConfirmForm',\n  component: ConfirmForm,\n  props: route => ({\n    formData: route.params.formData,\n    busTime: route.params.busTime\n  }),\n  meta: {\n    breadcrumbs: [\n      { name: \"home\", link: \"/\" },\n      { name: \"hospitals\", link: \"/hospitals\" },\n      { name: \"confirmform\" },\n    ]\n\n  }\n  },\n  {\n    path: '/rides-today',\n    name: 'RidesToday',\n    component: RidesToday,\n    meta: {\n      breadcrumbs: [\n        { name: \"home\", link: \"/\" },\n        { name: \"ridestoday\" }\n      ]\n    }\n  },\n  {\n    path: '/edit/:userId',\n    name: 'EditForm',\n    component: EditForm,\n    props: true,\n    meta: {\n      breadcrumbs: [\n        { name: \"home\", link: \"/\" },\n        { name: \"edit\" }\n      ]\n    }\n    \n  },\n  {\n    path: '/about',\n    name: 'AboutPage',\n    component: AboutPage, // Reference the correct component\n    meta: {\n      breadcrumbs: [\n        { name: \"home\", link: \"/\" },\n        { name: \"about\"}\n      ]\n    }\n  },\n  {\n    path: '/dashboard',\n    name: 'AdminDashboard',\n    component: AdminDashboard,\n    meta: { \n      requiresStaff: true,\n      breadcrumbs: [\n        { name: \"home\", link: \"/\" },\n        { name: \"dashboard\" }\n      ]\n    },\n  },\n  {\n    path: '/bus-schedules',\n    name: 'BusSchedules',\n    component: BusSchedules\n  },\n  {\n    path: '/taxi-users',\n    name: 'TaxiUsers',\n    component: TaxiUsers,\n    meta: { requiresStaff: true,\n    breadcrumbs: [\n      { name: \"home\", link: \"/\" },\n      { name: \"dashboard\", link: \"/dashboard\" },\n      { name: \"taxi\" }\n      ]\n     },\n  },\n  {\n    path: '/translators',\n    name: 'TranslatorView',\n    component: TranslatorView,\n    meta: { requiresStaff: true,\n    breadcrumbs: [\n      { name: \"home\", link: \"/\" },\n      { name: \"dashboard\", link: \"/dashboard\" },\n      { name: \"translators\" }\n      ]\n     },  \n  },\n  {\n    path: '/registered-rides',\n    name: 'RegisteredRides',\n    component: RegisteredRides,\n    meta: { requiresStaff: true,\n    breadcrumbs: [\n      { name: \"home\", link: \"/\" },\n      { name: \"dashboard\", link: \"/dashboard\" },\n      { name: \"rides\" }\n      ]\n     },\n  },\n  {\n    path: '/driver-view',\n    name: 'DriverView',\n    component: DriverView,\n    meta: { requiresStaff: true,\n    breadcrumbs: [\n      { name: \"home\", link: \"/\" },\n      { name: \"dashboard\", link: \"/dashboard\" },\n      { name: \"drivers\" }\n      ]\n\n     },\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  // Check if the route requires staff permissions\n  if (to.matched.some(record => record.meta.requiresStaff)) {\n    const token = localStorage.getItem('token');  // Get the token from localStorage\n    if (!token) {\n      // If no token is found, redirect to the login page\n      return next('/login');\n    } else {\n      // Verify token and user role if necessary (optional)\n      next();\n    }\n  } else {\n    // If route does not require authentication, just proceed\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}