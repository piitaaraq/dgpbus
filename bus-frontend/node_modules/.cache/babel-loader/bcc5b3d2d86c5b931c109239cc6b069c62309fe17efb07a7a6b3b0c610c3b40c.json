{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useAuthStore } from '@/stores/auth'; // Import the Pinia auth store\n\nexport default {\n  name: 'HeaderBar',\n  computed: {\n    isAuthenticated() {\n      const authStore = useAuthStore();\n      return authStore.isAuthenticated;\n    }\n  },\n  methods: {\n    handleLogout() {\n      const authStore = useAuthStore();\n      authStore.logout();\n      this.$router.push({\n        name: 'LoginPage'\n      });\n    },\n    changeLanguage(event) {\n      this.$i18n.locale = event.target.value;\n    },\n    toggleMenu() {\n      this.isActive = !this.isActive; // Toggle the burger menu\n    }\n  },\n  mounted() {\n    const authStore = useAuthStore();\n    authStore.restoreToken();\n  }\n};","map":{"version":3,"names":["useAuthStore","name","computed","isAuthenticated","authStore","methods","handleLogout","logout","$router","push","changeLanguage","event","$i18n","locale","target","value","toggleMenu","isActive","mounted","restoreToken"],"sources":["/home/peter/projects/bus-frontend/src/components/HeaderBar.vue"],"sourcesContent":["<template>\n  <nav class=\"navbar is-flex is-align-items-center mb-4\" role=\"navigation\" aria-label=\"main navigation\">\n\n    <div class=\"navbar-end\">\n      <div class=\"navbar-item\">\n        <router-link to=\"/\" class=\"navbar-item\">\n          <div class=\"header-logo\">\n            <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\">\n          </div>\n        </router-link>\n      </div>\n      <div class=\"actions-container\">\n        <div class=\"navbar-item\">\n          <div class=\"language-selector is-flex is-align-items-center\">\n            <font-awesome-icon :icon=\"['fas', 'globe']\" class=\"icon m-1\" />\n            <select @change=\"changeLanguage($event)\" class=\"language-select\">\n              <option value=\"gl\">Kalaallisut</option>\n              <option value=\"da\">Dansk</option>\n            </select>\n          </div>\n        </div>\n\n        <!-- Show logout button only if the user is authenticated -->\n        <div class=\"navbar-item\" v-if=\"isAuthenticated\">\n          <button class=\"logout-button\" @click=\"handleLogout\">\n            <font-awesome-icon :icon=\"['fas', 'sign-out-alt']\" class=\"logout-icon\" />\n            {{ $t('headerbar.logout') }}\n          </button>\n        </div>\n\n      </div>\n    </div>\n  </nav>\n</template>\n\n<script>\nimport { useAuthStore } from '@/stores/auth';  // Import the Pinia auth store\n\nexport default {\n  name: 'HeaderBar',\n\n\n  computed: {\n    isAuthenticated() {\n      const authStore = useAuthStore();\n      return authStore.isAuthenticated;\n    },\n  },\n\n  methods: {\n    handleLogout() {\n      const authStore = useAuthStore();\n      authStore.logout();\n      this.$router.push({ name: 'LoginPage' });\n    },\n\n    changeLanguage(event) {\n      this.$i18n.locale = event.target.value;\n    },\n\n    toggleMenu() {\n      this.isActive = !this.isActive; // Toggle the burger menu\n    },\n  },\n\n  mounted() {\n    const authStore = useAuthStore();\n    authStore.restoreToken();\n  },\n};\n</script>\n\n<style scoped>\n/* Navbar and item styling */\n.navbar {\n  padding: 1rem;\n}\n\n.navbar-end {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  flex-wrap: wrap;\n}\n\n.logo {\n  max-height: 50px;\n  margin-right: 1rem;\n}\n\n/* Actions container for language selector and logout button */\n.actions-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 0.5rem;\n}\n\n.language-select {\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.logout-button {\n  background-color: #f4f4f4;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.logout-button:hover {\n  background-color: #e0e0e0;\n}\n\n/* Center items on smaller screens without stacking */\n@media (max-width: 768px) {\n  .navbar-end {\n    justify-content: center;\n    /* Center items horizontally */\n    flex-wrap: wrap;\n    /* Ensure items wrap if needed, but don't stack by default */\n  }\n\n  .navbar-item {\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    /* Control the spacing between items to avoid stacking */\n  }\n\n  .logo {\n    margin-right: 0.5rem;\n    /* Reduce margin to keep everything in one line */\n  }\n}\n</style>\n"],"mappings":";AAoCA,SAASA,YAAW,QAAS,eAAe,EAAG;;AAE/C,eAAe;EACbC,IAAI,EAAE,WAAW;EAGjBC,QAAQ,EAAE;IACRC,eAAeA,CAAA,EAAG;MAChB,MAAMC,SAAQ,GAAIJ,YAAY,CAAC,CAAC;MAChC,OAAOI,SAAS,CAACD,eAAe;IAClC;EACF,CAAC;EAEDE,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,MAAMF,SAAQ,GAAIJ,YAAY,CAAC,CAAC;MAChCI,SAAS,CAACG,MAAM,CAAC,CAAC;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAER,IAAI,EAAE;MAAY,CAAC,CAAC;IAC1C,CAAC;IAEDS,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACC,KAAK,CAACC,MAAK,GAAIF,KAAK,CAACG,MAAM,CAACC,KAAK;IACxC,CAAC;IAEDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ,EAAE;IAClC;EACF,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,MAAMd,SAAQ,GAAIJ,YAAY,CAAC,CAAC;IAChCI,SAAS,CAACe,YAAY,CAAC,CAAC;EAC1B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}