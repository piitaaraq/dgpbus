{"ast":null,"code":"export default {\n  computed: {\n    breadcrumbs() {\n      const route = this.$route; // Get the current route\n\n      // Return the breadcrumbs from the meta field\n      return route.meta.breadcrumbs || [];\n    }\n  },\n  methods: {\n    isActive(index) {\n      // Mark the last breadcrumb as active\n      return index === this.breadcrumbs.length - 1;\n    }\n  }\n};","map":{"version":3,"names":["computed","breadcrumbs","route","$route","meta","methods","isActive","index","length"],"sources":["/home/peter/projects/bus-frontend/src/components/BreadCrumb.vue"],"sourcesContent":["<template>\n    <nav v-if=\"breadcrumbs.length\" class=\"breadcrumb is-right is-medium has-bullet-separator\" aria-label=\"breadcrumbs\">\n        <ul>\n            <li v-for=\"(crumb, index) in breadcrumbs\" :key=\"index\" :class=\"{ 'is-active': isActive(index) }\">\n                <!-- If the crumb has a link, make it clickable; otherwise, just display the name -->\n                <router-link v-if=\"crumb.link\" :to=\"crumb.link\"> {{ $t(`breadcrumbs.${crumb.name}`) }} </router-link>\n                <span v-else> {{ $t(`breadcrumbs.${crumb.name}`) }} </span>\n            </li>\n        </ul>\n    </nav>\n</template>\n\n<script>\nexport default {\n    computed: {\n        breadcrumbs() {\n            const route = this.$route;  // Get the current route\n\n            // Return the breadcrumbs from the meta field\n            return route.meta.breadcrumbs || [];\n        }\n    },\n    methods: {\n        isActive(index) {\n            // Mark the last breadcrumb as active\n            return index === this.breadcrumbs.length - 1;\n        }\n    }\n};\n</script>\n\n<style scoped></style>\n"],"mappings":"AAaA,eAAe;EACXA,QAAQ,EAAE;IACNC,WAAWA,CAAA,EAAG;MACV,MAAMC,KAAI,GAAI,IAAI,CAACC,MAAM,EAAG;;MAE5B;MACA,OAAOD,KAAK,CAACE,IAAI,CAACH,WAAU,IAAK,EAAE;IACvC;EACJ,CAAC;EACDI,OAAO,EAAE;IACLC,QAAQA,CAACC,KAAK,EAAE;MACZ;MACA,OAAOA,KAAI,KAAM,IAAI,CAACN,WAAW,CAACO,MAAK,GAAI,CAAC;IAChD;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}