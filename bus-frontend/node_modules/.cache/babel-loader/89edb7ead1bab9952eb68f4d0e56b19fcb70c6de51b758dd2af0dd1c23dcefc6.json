{"ast":null,"code":"// stores/auth.js\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    token: localStorage.getItem('token') || null\n  }),\n  getters: {\n    // Reactive getter that checks if a user is logged in based on the token\n    isAuthenticated: state => !!state.token\n  },\n  actions: {\n    async login(email, password) {\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/api/token/`, {\n          email,\n          password\n        });\n        this.token = response.data.access;\n        localStorage.setItem('token', this.token); // Store the token\n      } catch (error) {\n        throw new Error('Login failed');\n      }\n    },\n    logout() {\n      this.token = null;\n      localStorage.removeItem('token'); // Clear the token from localStorage\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useAuthStore","state","token","localStorage","getItem","getters","isAuthenticated","actions","login","email","password","response","post","process","env","VUE_APP_BACKEND_URL","data","access","setItem","error","Error","logout","removeItem"],"sources":["/home/peter/projects/bus-frontend/src/stores/auth.js"],"sourcesContent":["// stores/auth.js\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\n\nexport const useAuthStore = defineStore('auth', {\n    state: () => ({\n        token: localStorage.getItem('token') || null,\n    }),\n    getters: {\n        // Reactive getter that checks if a user is logged in based on the token\n        isAuthenticated: (state) => !!state.token,\n    },\n    actions: {\n        async login(email, password) {\n            try {\n                const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/api/token/`, {\n                    email,\n                    password,\n                });\n\n                this.token = response.data.access;\n                localStorage.setItem('token', this.token);  // Store the token\n            } catch (error) {\n                throw new Error('Login failed');\n            }\n        },\n        logout() {\n            this.token = null;\n            localStorage.removeItem('token');  // Clear the token from localStorage\n        },\n    },\n});\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC,MAAM,EAAE;EAC5CG,KAAK,EAAEA,CAAA,MAAO;IACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI;EAC5C,CAAC,CAAC;EACFC,OAAO,EAAE;IACL;IACAC,eAAe,EAAGL,KAAK,IAAK,CAAC,CAACA,KAAK,CAACC;EACxC,CAAC;EACDK,OAAO,EAAE;IACL,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;MACzB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,aAAa,EAAE;UAC/EN,KAAK;UACLC;QACJ,CAAC,CAAC;QAEF,IAAI,CAACR,KAAK,GAAGS,QAAQ,CAACK,IAAI,CAACC,MAAM;QACjCd,YAAY,CAACe,OAAO,CAAC,OAAO,EAAE,IAAI,CAAChB,KAAK,CAAC,CAAC,CAAE;MAChD,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACZ,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MACnC;IACJ,CAAC;IACDC,MAAMA,CAAA,EAAG;MACL,IAAI,CAACnB,KAAK,GAAG,IAAI;MACjBC,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC,CAAC,CAAE;IACvC;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}