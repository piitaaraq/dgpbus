{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { useFormStore } from '@/stores/formStore';\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      form: {\n        name: '',\n        room: '',\n        appointment_date: '',\n        appointment_time: '',\n        department: '',\n        needs_translator: false,\n        hospital: this.id // Automatically associate the hospital ID\n      }\n    };\n  },\n  methods: {\n    async goToConfirmation() {\n      const formStore = useFormStore(); // Access the Pinia store\n\n      if ([1, 8].includes(this.form.hospital)) {\n        // Only calculate for hospitals 1 and 8\n        try {\n          // Make the POST request to calculate the bus time\n          const response = await axios.post('http://localhost:8000/api/users/calculate_bus_time/', this.form);\n          const busTime = response.data.bus_time;\n          if (busTime) {\n            // Set both form data and busTime in the store\n            formStore.setFormData({\n              ...this.form,\n              busTime\n            });\n          }\n        } catch (error) {\n          console.error('Error calculating bus time:', error);\n        }\n      } else {\n        formStore.setFormData(this.form); // No bus time for other hospitals\n      }\n\n      // Navigate to the confirmation page\n      this.$router.push({\n        name: 'ConfirmForm'\n      });\n    },\n    goBack() {\n      this.$router.push({\n        name: 'HospitalList'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","useFormStore","props","data","form","name","room","appointment_date","appointment_time","department","needs_translator","hospital","id","methods","goToConfirmation","formStore","includes","response","post","busTime","bus_time","setFormData","error","console","$router","push","goBack"],"sources":["/home/peter/projects/bus-frontend/src/views/HospitalForm.vue"],"sourcesContent":["<template>\n  <div class=\"hospital-form-container container\">\n    <div class=\"explanatory-text\">\n      <p class=\"is-size-4\">\n        Nakorsiarnissat pillugu paasissutissat immersussavatit. Qanoq\n        ateqarnerlutit, kinguliat ilanngutinngikkaluarlugu allassvat. Qassimi\n        ineqarnerlutit aamma narkorsiarnissavit ullua, piffissaa\n        napparsimmavimmilu immikkoortumi sumiinnersoq ilanngullguti\n        immersussavatit.\n      </p>\n      <p class=\"is-size-4\">Immersugassat tamakkerukkit ingerlaqqissaatit.</p>\n      <p class=\"is-size-4\">\n        Kalaallit Peqqissartut Illuannut utertussaasimaguit \"Uterit\" tuussavat.\n      </p>\n    </div>\n\n    <div class=\"form-section\">\n      <h2>Nakorsiarnissat pillugu</h2>\n      <form @submit.prevent=\"submitForm\">\n        <div class=\"field\">\n          <label class=\"label\">Atit</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"text\" v-model=\"form.name\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Inivit normua</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"text\" v-model=\"form.room\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Nakorsiarfissavit ullua</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"date\" v-model=\"form.appointment_date\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Piffissaq</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"time\" v-model=\"form.appointment_time\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Napparsimmavimmi immikkoortoq</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"text\" v-model=\"form.department\" required />\n          </div>\n        </div>\n\n        <div class=\"field\">\n          <label class=\"label\">Oqalutsimik pisariaqartitsivit?</label>\n          <div class=\"control\">\n            <label class=\"radio\">\n              <input type=\"radio\" v-model=\"form.needs_translator\" :value=\"true\" />\n              Aap\n            </label>\n            <label class=\"radio\">\n              <input type=\"radio\" v-model=\"form.needs_translator\" :value=\"false\" />\n              Naamik\n            </label>\n          </div>\n        </div>\n        <div class=\"field is-grouped mt-4\" style=\"display: flex; gap: 10px\">\n          <div class=\"control\">\n            <button class=\"button is-primary\" type=\"button\" @click=\"goToConfirmation\">\n              Ingerlaqqigit\n            </button>\n          </div>\n          <div class=\"control\">\n            <button class=\"button is-light\" type=\"button\" @click=\"goBack\">\n              Uterit\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { useFormStore } from '@/stores/formStore';\n\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      form: {\n        name: '',\n        room: '',\n        appointment_date: '',\n        appointment_time: '',\n        department: '',\n        needs_translator: false,\n        hospital: this.id,  // Automatically associate the hospital ID\n      },\n    };\n  },\n  methods: {\n    async goToConfirmation() {\n      const formStore = useFormStore();  // Access the Pinia store\n\n      if ([1, 8].includes(this.form.hospital)) {  // Only calculate for hospitals 1 and 8\n        try {\n          // Make the POST request to calculate the bus time\n          const response = await axios.post('http://localhost:8000/api/users/calculate_bus_time/', this.form);\n          const busTime = response.data.bus_time;\n\n          if (busTime) {\n            // Set both form data and busTime in the store\n            formStore.setFormData({ ...this.form, busTime });\n          }\n        } catch (error) {\n          console.error('Error calculating bus time:', error);\n        }\n      } else {\n        formStore.setFormData(this.form);  // No bus time for other hospitals\n      }\n\n      // Navigate to the confirmation page\n      this.$router.push({ name: 'ConfirmForm' });\n    },\n    goBack() {\n      this.$router.push({ name: 'HospitalList' });\n    },\n  },\n}\n</script>\n\n<style scoped>\n/* Flexbox layout for wide screens */\n.hospital-form-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 20px;\n}\n\n.explanatory-text {\n  flex: 1;\n  margin-right: 40px;\n  min-width: 300px;\n}\n\n.form-section {\n  flex: 1;\n  min-width: 300px;\n}\n\n@media (max-width: 768px) {\n\n  /* Stack content vertically for small screens */\n  .hospital-form-container {\n    flex-direction: column;\n  }\n\n  .explanatory-text,\n  .form-section {\n    margin-right: 0;\n  }\n}\n\n.radio {\n  margin-right: 30px;\n}\n</style>\n"],"mappings":";AAqFA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,YAAW,QAAS,oBAAoB;AAEjD,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,gBAAgB,EAAE,EAAE;QACpBC,gBAAgB,EAAE,EAAE;QACpBC,UAAU,EAAE,EAAE;QACdC,gBAAgB,EAAE,KAAK;QACvBC,QAAQ,EAAE,IAAI,CAACC,EAAE,CAAG;MACtB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,MAAMC,SAAQ,GAAId,YAAY,CAAC,CAAC,EAAG;;MAEnC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAACe,QAAQ,CAAC,IAAI,CAACZ,IAAI,CAACO,QAAQ,CAAC,EAAE;QAAG;QAC1C,IAAI;UACF;UACA,MAAMM,QAAO,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAAC,qDAAqD,EAAE,IAAI,CAACd,IAAI,CAAC;UACnG,MAAMe,OAAM,GAAIF,QAAQ,CAACd,IAAI,CAACiB,QAAQ;UAEtC,IAAID,OAAO,EAAE;YACX;YACAJ,SAAS,CAACM,WAAW,CAAC;cAAE,GAAG,IAAI,CAACjB,IAAI;cAAEe;YAAQ,CAAC,CAAC;UAClD;QACF,EAAE,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF,OAAO;QACLP,SAAS,CAACM,WAAW,CAAC,IAAI,CAACjB,IAAI,CAAC,EAAG;MACrC;;MAEA;MACA,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC;QAAEpB,IAAI,EAAE;MAAc,CAAC,CAAC;IAC5C,CAAC;IACDqB,MAAMA,CAAA,EAAG;MACP,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC;QAAEpB,IAAI,EAAE;MAAe,CAAC,CAAC;IAC7C;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}