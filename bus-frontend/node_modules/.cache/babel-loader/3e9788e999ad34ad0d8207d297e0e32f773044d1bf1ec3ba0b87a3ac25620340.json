{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2ef4cc40\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"rides-today-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Ullumi bussertussat\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"table is-fullwidth\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Piffissaq\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ilaasussap aqqa\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ilaasussap inaa\")])], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = [\"rowspan\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rides, ride => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: ride.id\n    }, [_createCommentVNode(\" First row for each ride's users \"), ride.users && ride.users.length > 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_5, [_createElementVNode(\"td\", {\n      rowspan: ride.users.length\n    }, _toDisplayString(ride.departure_time), 9 /* TEXT, PROPS */, _hoisted_6), _createElementVNode(\"td\", null, _toDisplayString(ride.users[0].name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ride.users[0].room), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Subsequent rows for remaining users \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(ride.users.slice(1), user => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: user.id\n      }, [_createElementVNode(\"td\", null, _toDisplayString(user.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.room), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","rides","ride","id","_createCommentVNode","users","length","_hoisted_5","rowspan","departure_time","_hoisted_6","_toDisplayString","name","room","slice","user"],"sources":["/home/peter/projects/bus-frontend/src/views/RidesToday.vue"],"sourcesContent":["<template>\n    <div class=\"rides-today-container\">\n        <h2>Ullumi bussertussat</h2>\n\n        <table class=\"table is-fullwidth\">\n            <thead>\n                <tr>\n                    <th>Piffissaq</th>\n                    <th>Ilaasussap aqqa</th>\n                    <th>Ilaasussap inaa</th>\n                </tr>\n            </thead>\n            <tbody>\n                <template v-for=\"ride in rides\" :key=\"ride.id\">\n                    <!-- First row for each ride's users -->\n                    <tr v-if=\"ride.users && ride.users.length > 0\">\n                        <td :rowspan=\"ride.users.length\">{{ ride.departure_time }}</td>\n                        <td>{{ ride.users[0].name }}</td>\n                        <td>{{ ride.users[0].room }}</td>\n                    </tr>\n                    <!-- Subsequent rows for remaining users -->\n                    <tr v-for=\"user in ride.users.slice(1)\" :key=\"user.id\">\n                        <td>{{ user.name }}</td>\n                        <td>{{ user.room }}</td>\n                    </tr>\n                </template>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            rides: []\n        };\n    },\n    mounted() {\n        this.fetchRides();\n    },\n    methods: {\n        async fetchRides() {\n            try {\n                const response = await axios.get('http://localhost:8000/api/rides/today');\n                console.log('API Response:', response.data); // Log the API response\n                this.rides = response.data;\n            } catch (error) {\n                console.error('Error fetching rides:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.rides-today-container {\n    padding: 20px;\n}\n\n.table {\n    margin-top: 20px;\n}\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAuB;gEAC9BC,mBAAA,CAA4B,YAAxB,qBAAmB;;EAEhBD,KAAK,EAAC;AAAoB;gEAC7BC,mBAAA,CAMQ,gB,aALJA,mBAAA,CAIK,a,aAHDA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAwB,YAApB,iBAAe,G,aACnBA,mBAAA,CAAwB,YAApB,iBAAe,E;;EATvCC,GAAA;AAAA;mBAAA;;uBACIC,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BFC,UAA4B,EAE5BJ,mBAAA,CAuBQ,SAvBRK,UAuBQ,GAtBJC,UAMQ,EACRN,mBAAA,CAcQ,iB,kBAbJE,mBAAA,CAYWK,SAAA,QAzB3BC,WAAA,CAayCC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAbrCT,mBAAA,CAAAK,SAAA;MAAAN,GAAA,EAasDU,IAAI,CAACC;QACvCC,mBAAA,qCAAwC,EAC9BF,IAAI,CAACG,KAAK,IAAIH,IAAI,CAACG,KAAK,CAACC,MAAM,Q,cAAzCb,mBAAA,CAIK,MAnBzBc,UAAA,GAgBwBhB,mBAAA,CAA+D;MAA1DiB,OAAO,EAAEN,IAAI,CAACG,KAAK,CAACC;wBAAWJ,IAAI,CAACO,cAAc,wBAhB/EC,UAAA,GAiBwBnB,mBAAA,CAAiC,YAAAoB,gBAAA,CAA1BT,IAAI,CAACG,KAAK,IAAIO,IAAI,kBACzBrB,mBAAA,CAAiC,YAAAoB,gBAAA,CAA1BT,IAAI,CAACG,KAAK,IAAIQ,IAAI,iB,KAlBjDT,mBAAA,gBAoBoBA,mBAAA,yCAA4C,G,kBAC5CX,mBAAA,CAGKK,SAAA,QAxBzBC,WAAA,CAqBuCG,IAAI,CAACG,KAAK,CAACS,KAAK,KAAxBC,IAAI;2BAAftB,mBAAA,CAGK;QAHoCD,GAAG,EAAEuB,IAAI,CAACZ;UAC/CZ,mBAAA,CAAwB,YAAAoB,gBAAA,CAAjBI,IAAI,CAACH,IAAI,kBAChBrB,mBAAA,CAAwB,YAAAoB,gBAAA,CAAjBI,IAAI,CAACF,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}