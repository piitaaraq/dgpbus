{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { useFormStore } from '@/stores/formStore';\nexport default {\n  setup() {\n    const formStore = useFormStore(); // Access the form store\n    const {\n      formData\n    } = formStore; // Get formData from store\n    const busTime = formData.busTime; // Get busTime from formData\n\n    // Debugging: Log formData and busTime\n    console.log('Form Data:', formData);\n    console.log('Bus Time:', busTime);\n\n    // For debugging purpose only: Make formStore globally accessible in browser console\n    window.formStore = formStore;\n    return {\n      formData,\n      busTime\n    }; // Return formData and busTime for template usage\n  },\n  methods: {\n    async submitUserData() {\n      try {\n        // Validate the formData and make sure it's complete\n        console.log('Submitting user data:', this.formData);\n\n        // Submit formData to the backend via POST request\n        await axios.post('http://localhost:8000/api/patients/', this.formData);\n\n        // On successful submission, navigate to the homepage or a success page\n        this.$router.push({\n          name: 'HomePage'\n        });\n      } catch (error) {\n        console.error('Error creating user:', error);\n      }\n    },\n    goBack() {\n      this.$router.go(-1); // Navigate back to the form page\n    }\n  }\n};","map":{"version":3,"names":["axios","useFormStore","setup","formStore","formData","busTime","console","log","window","methods","submitUserData","post","$router","push","name","error","goBack","go"],"sources":["/home/peter/projects/bus-frontend/src/views/ConfirmForm.vue"],"sourcesContent":["<template>\n  <div class=\"columns\">\n    <div class=\"confirmation-form-container column is-8\">\n      <div class=\"explanatory-text\">\n        <p>\n          {{ $t(\"confirm.para1\") }}\n        </p>\n        <p>\n          {{ $t(\"confirm.para2\") }}\n        </p>\n      </div>\n\n      <!-- Greyed-out box showing user input -->\n      <div class=\"form-section\">\n        <div class=\"greyed-out-box\">\n          <p><strong>{{ $t(\"confirm.name\") }} :</strong> {{ formData.name }}</p>\n          <p><strong>{{ $t(\"confirm.room\") }} :</strong> {{ formData.room }}</p>\n          <p><strong>{{ $t(\"confirm.appDate\") }} :</strong> {{ formData.appointment_date }}</p>\n          <p><strong>{{ $t(\"confirm.appTime\") }} :</strong> {{ formData.appointment_time }}</p>\n          <p><strong>{{ $t(\"confirm.department\") }} :</strong> {{ formData.department }}</p>\n          <p><strong>{{ $t(\"confirm.desc\") }} :</strong> {{ formData.description }}</p>\n          <p><strong>{{ $t(\"confirm.translator\") }} :</strong> {{ formData.needs_translator ? 'Yes' : 'No' }}</p>\n          <p v-if=\"busTime\"><strong>{{ $t(\"confirm.bustime\") }} :</strong> {{ busTime }}</p> <!-- Show bus_time here -->\n        </div>\n\n        <!-- Confirm and Go Back buttons -->\n        <div class=\"field is-grouped mt-4\">\n          <div class=\"control\">\n            <button class=\"button is-large is-primary\" @click=\"submitUserData\">{{ $t(\"confirm.confirm\") }} </button>\n            <!-- Button to accept entry -->\n          </div>\n          <div class=\"control\">\n            <button class=\"button is-large is-light\" @click=\"goBack\">{{ $t(\"confirm.back\") }} </button>\n          </div>\n          <div class=\"control\">\n            <button class=\"button is-large is-danger\" @click=\"editEntry\">{{ $t(\"confirm.edit\") }} </button>\n            <!-- Edit button to delete and start over -->\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { useFormStore } from '@/stores/formStore';\n\nexport default {\n  setup() {\n    const formStore = useFormStore();  // Access the form store\n    const { formData } = formStore;    // Get formData from store\n    const busTime = formData.busTime;  // Get busTime from formData\n\n    // Debugging: Log formData and busTime\n    console.log('Form Data:', formData);\n    console.log('Bus Time:', busTime);\n\n    // For debugging purpose only: Make formStore globally accessible in browser console\n    window.formStore = formStore;\n\n    return { formData, busTime };  // Return formData and busTime for template usage\n  },\n  methods: {\n    async submitUserData() {\n      try {\n        // Validate the formData and make sure it's complete\n        console.log('Submitting user data:', this.formData);\n\n        // Submit formData to the backend via POST request\n        await axios.post('http://localhost:8000/api/patients/', this.formData);\n\n        // On successful submission, navigate to the homepage or a success page\n        this.$router.push({ name: 'HomePage' });\n      } catch (error) {\n        console.error('Error creating user:', error);\n      }\n    },\n    goBack() {\n      this.$router.go(-1);  // Navigate back to the form page\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n.confirmation-form-container {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  /* min-width: 300px; */\n  padding: 20px;\n}\n\n.explanatory-text {\n  /* flex: 1; */\n  /* min-width: 300px; */\n  margin: 20px 0 20px;\n  font-size: 1.5rem;\n}\n\n.form-section {\n  flex: 1;\n}\n\n.greyed-out-box {\n  /* flex: 1; */\n  background: linear-gradient(145deg, rgba(255, 255, 255, 0.5), rgba(0, 165, 207, 0.5));\n  backdrop-filter: blur(10px);\n  padding: 30px;\n  border-radius: 5px;\n  font-size: 1.25rem;\n}\n</style>\n"],"mappings":";AA8CA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,YAAW,QAAS,oBAAoB;AAEjD,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIF,YAAY,CAAC,CAAC,EAAG;IACnC,MAAM;MAAEG;IAAS,IAAID,SAAS,EAAK;IACnC,MAAME,OAAM,GAAID,QAAQ,CAACC,OAAO,EAAG;;IAEnC;IACAC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,QAAQ,CAAC;IACnCE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,OAAO,CAAC;;IAEjC;IACAG,MAAM,CAACL,SAAQ,GAAIA,SAAS;IAE5B,OAAO;MAAEC,QAAQ;MAAEC;IAAQ,CAAC,EAAG;EACjC,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF;QACAJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACH,QAAQ,CAAC;;QAEnD;QACA,MAAMJ,KAAK,CAACW,IAAI,CAAC,qCAAqC,EAAE,IAAI,CAACP,QAAQ,CAAC;;QAEtE;QACA,IAAI,CAACQ,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAW,CAAC,CAAC;MACzC,EAAE,OAAOC,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACJ,OAAO,CAACK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAG;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}