{"ast":null,"code":"// src/router/index.js\n\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomePage from '../views/HomePage.vue'; // Ensure the paths are correct\nimport AboutPage from '../views/AboutPage.vue'; // Ensure the paths are correct\nimport GreenlandicHomePage from '../views/GreenlandicHomePage.vue';\nimport HospitalForm from '../views/HospitalForm.vue'; // Import HospitalForm component\nimport ConfirmForm from '../views/ConfirmForm.vue';\nimport EditForm from '../views/EditForm.vue';\nimport RidesToday from '../views/RidesToday.vue';\nimport AdminDashboard from '@/views/AdminDashboard.vue';\nimport BusSchedules from '@/views/BusSchedules.vue';\nimport TaxiUsers from '@/views/TaxiUsers.vue';\nimport RegisteredRides from '@/views/RegisteredRides.vue';\nimport DriverView from '@/views/DriverView.vue';\nconst routes = [{\n  path: '/',\n  name: 'HomePage',\n  component: HomePage // Reference the correct component\n}, {\n  path: '/greenlandic-home',\n  name: 'GreenlandicHomePage',\n  component: GreenlandicHomePage\n}, {\n  path: '/hospital/:id',\n  // Dynamic route for HospitalForm with :id as a parameter\n  name: 'HospitalForm',\n  component: HospitalForm,\n  props: true // Pass the route parameters as props to the component\n}, {\n  path: '/confirm',\n  name: 'ConfirmForm',\n  component: ConfirmForm,\n  props: route => ({\n    formData: route.params.formData,\n    busTime: route.params.busTime\n  })\n}, {\n  path: '/rides-today',\n  name: 'RidesToday',\n  component: RidesToday\n}, {\n  path: '/edit/:userId',\n  name: 'EditForm',\n  component: EditForm,\n  props: true // Pass the userId as a prop to EditForm\n}, {\n  path: '/about',\n  name: 'AboutPage',\n  component: AboutPage // Reference the correct component\n}, {\n  path: '/admin-dashboard',\n  name: 'AdminDashboard',\n  component: AdminDashboard\n}, {\n  path: '/rides-today',\n  name: 'RidesToday',\n  component: RidesToday\n}, {\n  path: '/bus-schedules',\n  name: 'BusSchedules',\n  component: BusSchedules\n}, {\n  path: '/taxi-users',\n  name: 'TaxiUsers',\n  component: TaxiUsers\n}, {\n  path: '/registered-rides',\n  name: 'RegisteredRides',\n  component: RegisteredRides\n}, {\n  path: '/driver-view',\n  name: 'DriverView',\n  component: DriverView\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomePage","AboutPage","GreenlandicHomePage","HospitalForm","ConfirmForm","EditForm","RidesToday","AdminDashboard","BusSchedules","TaxiUsers","RegisteredRides","DriverView","routes","path","name","component","props","route","formData","params","busTime","router","history","process","env","BASE_URL"],"sources":["/home/peter/projects/bus-frontend/src/router/index.js"],"sourcesContent":["// src/router/index.js\n\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomePage from '../views/HomePage.vue';  // Ensure the paths are correct\nimport AboutPage from '../views/AboutPage.vue'; // Ensure the paths are correct\nimport GreenlandicHomePage from '../views/GreenlandicHomePage.vue'; \nimport HospitalForm from '../views/HospitalForm.vue'; // Import HospitalForm component\nimport ConfirmForm from '../views/ConfirmForm.vue';\nimport EditForm from '../views/EditForm.vue';\nimport RidesToday from '../views/RidesToday.vue';\nimport AdminDashboard from '@/views/AdminDashboard.vue';\nimport BusSchedules from '@/views/BusSchedules.vue';\nimport TaxiUsers from '@/views/TaxiUsers.vue';\nimport RegisteredRides from '@/views/RegisteredRides.vue';\nimport DriverView from '@/views/DriverView.vue';\n\n\nconst routes = [\n  {\n    path: '/',\n    name: 'HomePage',\n    component: HomePage, // Reference the correct component\n  },\n  {\n    path: '/greenlandic-home',\n    name: 'GreenlandicHomePage',\n    component: GreenlandicHomePage,\n  },\n  {\n    path: '/hospital/:id', // Dynamic route for HospitalForm with :id as a parameter\n    name: 'HospitalForm',\n    component: HospitalForm,\n    props: true, // Pass the route parameters as props to the component\n  },\n  {\n  path: '/confirm',\n  name: 'ConfirmForm',\n  component: ConfirmForm,\n  props: route => ({\n    formData: route.params.formData,\n    busTime: route.params.busTime\n  })\n  },\n  {\n    path: '/rides-today',\n    name: 'RidesToday',\n    component: RidesToday,\n  },\n  {\n    path: '/edit/:userId',\n    name: 'EditForm',\n    component: EditForm,\n    props: true  // Pass the userId as a prop to EditForm\n  },\n  {\n    path: '/about',\n    name: 'AboutPage',\n    component: AboutPage, // Reference the correct component\n  },\n  {\n    path: '/admin-dashboard',\n    name: 'AdminDashboard',\n    component: AdminDashboard\n  },\n  {\n    path: '/rides-today',\n    name: 'RidesToday',\n    component: RidesToday\n  },\n  {\n    path: '/bus-schedules',\n    name: 'BusSchedules',\n    component: BusSchedules\n  },\n  {\n    path: '/taxi-users',\n    name: 'TaxiUsers',\n    component: TaxiUsers\n  },\n  {\n    path: '/registered-rides',\n    name: 'RegisteredRides',\n    component: RegisteredRides\n  },\n  {\n    path: '/driver-view',\n    name: 'DriverView',\n    component: DriverView\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nexport default router;\n"],"mappings":"AAAA;;AAEA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAE;AAC/C,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;AAChD,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAOC,YAAY,MAAM,2BAA2B,CAAC,CAAC;AACtD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,UAAU,MAAM,wBAAwB;AAG/C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEf,QAAQ,CAAE;AACvB,CAAC,EACD;EACEa,IAAI,EAAE,mBAAmB;EACzBC,IAAI,EAAE,qBAAqB;EAC3BC,SAAS,EAAEb;AACb,CAAC,EACD;EACEW,IAAI,EAAE,eAAe;EAAE;EACvBC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEZ,YAAY;EACvBa,KAAK,EAAE,IAAI,CAAE;AACf,CAAC,EACD;EACAH,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEX,WAAW;EACtBY,KAAK,EAAEC,KAAK,KAAK;IACfC,QAAQ,EAAED,KAAK,CAACE,MAAM,CAACD,QAAQ;IAC/BE,OAAO,EAAEH,KAAK,CAACE,MAAM,CAACC;EACxB,CAAC;AACD,CAAC,EACD;EACEP,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEV,QAAQ;EACnBW,KAAK,EAAE,IAAI,CAAE;AACf,CAAC,EACD;EACEH,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEd,SAAS,CAAE;AACxB,CAAC,EACD;EACEY,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,mBAAmB;EACzBC,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAEL;AACb,CAAC,EACD;EACEG,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEJ;AACb,CAAC,CACF;AAED,MAAMU,MAAM,GAAGvB,YAAY,CAAC;EAC1BwB,OAAO,EAAEvB,gBAAgB,CAACwB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/Cb;AACF,CAAC,CAAC;AAEF,eAAeS,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}